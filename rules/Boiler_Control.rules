rule "StartUp Boiler Control Heating"
when
    System started
then
    if (Boiler_Control == NULL) {
        Boiler_Control.postUpdate(OFF)
    }
end

rule "Boiler Demand changed"
when
//any change in demand , on or off in any room
    Item frontRoom_Heating received update or
    Item conservatory_Heater received update or
    Item elsiesRoom_Heating received update or
    Item attic_Heating received update or
    Item bedroom_Heating received update or
    Item office_Heating received update or
    Item hall_Heating received update
then
    if (
        frontRoom_Heating.state == NULL 
        || conservatory_Heater.state == NULL 
        || elsiesRoom_Heating.state == NULL
        || attic_Heating.state == NULL 
        || bedroom_Heating.state == NULL
        || office_Heating.state == NULL 
        || hall_Heating.state == NULL        
        ) 
            {
                logInfo("Boiler_Control RULE", "?? ?? ??Heating state detected with NULL VALUE" )
                return 
            }
    //if any rooms want heat - turn on boiler
    if (       (frontRoom_Heating.state == ON) 
            || (conservatory_Heater.state == ON) 
            || (elsiesRoom_Heating.state == ON) 
            || (attic_Heating.state == ON)
            || (bedroom_Heating.state == ON)
            || (office_Heating.state == ON)
            || (hall_Heating.state == ON) 
            ){
        logInfo("Boiler RULE", "Sending boiler ON command" )
        Boiler_Control.sendCommand(ON)
        Boiler_Control.postUpdate(ON)
       // CT_Message.postUpdate("Mode 0, Boiler Off")
    }
    else { // no rooms want heat so turn off boiler
        logInfo("Boiler RULE", "Sending boiler OFF command" )
        // logInfo("Boiler RULE", "Triggered by : " )
        Boiler_Control.sendCommand(OFF)
        Boiler_Control.postUpdate(OFF)
    }
end
