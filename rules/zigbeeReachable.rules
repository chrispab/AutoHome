var Timer RouterTimer = null
var int routerTimeout = 61 

var Timer Zb_THPSensor_01_Timer = null
var Timer Zb_THSensor_01_Timer = null
var Timer Zb_THSensor_02_Timer = null
var Timer Zb_THSensor_03_Timer = null
var Timer Zb_THSensor_04_Timer = null

var int Zb_TempSensor_Timeout = 60*15
rule "StartUp - set up Heating settings"
when
    System started
then
        ZbRouter_01_Reachable.postUpdate("Offline")
        Zb_THPSensor_01_reachable.postUpdate("Offline")
        Zb_THSensor_01_reachable.postUpdate("Offline")
        Zb_THSensor_02_reachable.postUpdate("Offline")
        Zb_THSensor_03_reachable.postUpdate("Offline")
        Zb_THSensor_04_reachable.postUpdate("Offline")
end


rule "monitor ZB Router availability"
when
    Item ZbRouter_01_Quality received update
then
    logInfo("monitor ZB Router", "ZB Router received mqtt - mark as online")
    ZbRouter_01_Reachable.postUpdate("Online")
    if(RouterTimer !== null) {
        RouterTimer.cancel
    }
    
    RouterTimer = createTimer(now.plusSeconds(routerTimeout), [| 
        //execute if timer not reset - set as "Offline"
        ZbRouter_01_Reachable.postUpdate("Offline")
        logInfo("monitor ZB Router", "ZB Router timed out - mark as offline")
        RouterTimer = null
    ])
end



rule "monitor ZB Zb_THPSensor_01 availability"
when
    Item Zb_THPSensor_01_temperature received update
then
    logInfo("monitor Zb_THPSensor_01", "Zb_THPSensor_01 mqtt received - mark as online")
    Zb_THPSensor_01_reachable.postUpdate("Online")
    if(Zb_THPSensor_01_Timer !== null) {
        Zb_THPSensor_01_Timer.cancel
    }
    Zb_THPSensor_01_Timer = createTimer(now.plusSeconds(Zb_TempSensor_Timeout), [| 
        Zb_THPSensor_01_reachable.postUpdate("Offline")//execute if timer not cancelled - set as "Offline"
        logInfo("monitor ZB Zb_THPSensor_01", "Zb_THPSensor_01 timed out - mark as offline")
        Zb_THPSensor_01_Timer = null
    ])
end

rule "monitor ZB Zb_THSensor_01 availability"
when
    Item Zb_THSensor_01_temperature received update
then
    logInfo("monitor Zb_THSensor_01", "Zb_THSensor_01 mqtt received - mark as online")
    Zb_THSensor_01_reachable.postUpdate("Online")
    if(Zb_THSensor_01_Timer !== null) {
        Zb_THSensor_01_Timer.cancel
    }
    Zb_THSensor_01_Timer = createTimer(now.plusSeconds(Zb_TempSensor_Timeout), [| 
        Zb_THSensor_01_reachable.postUpdate("Offline")//execute if timer not cancelled - set as "Offline"
        logInfo("monitor ZB Zb_THSensor_01", "Zb_THSensor_01 timed out - mark as offline")
        Zb_THSensor_01_Timer = null
    ])
end

rule "monitor ZB Zb_THSensor_02 availability"
when
    Item Zb_THSensor_02_temperature received update
then
    logInfo("monitor Zb_THSensor_02", "Zb_THSensor_02 mqtt received - mark as online")
    Zb_THSensor_02_reachable.postUpdate("Online")
    if(Zb_THSensor_02_Timer !== null) {
        Zb_THSensor_02_Timer.cancel
    }
    Zb_THSensor_02_Timer = createTimer(now.plusSeconds(Zb_TempSensor_Timeout), [| 
        Zb_THSensor_02_reachable.postUpdate("Offline")//execute if timer not cancelled - set as "Offline"
        logInfo("monitor ZB Zb_THSensor_02", "Zb_THSensor_02 timed out - mark as offline")
        Zb_THSensor_02_Timer = null
    ])
end


rule "monitor ZB Zb_THSensor_03 availability"
when
    Item Zb_THSensor_03_temperature received update
then
    logInfo("monitor Zb_THSensor_03", "Zb_THSensor_03 mqtt received - mark as online")
    Zb_THSensor_03_reachable.postUpdate("Online")
    if(Zb_THSensor_03_Timer !== null) {
        Zb_THSensor_03_Timer.cancel
    }
    Zb_THSensor_03_Timer = createTimer(now.plusSeconds(Zb_TempSensor_Timeout), [| 
        Zb_THSensor_03_reachable.postUpdate("Offline")//execute if timer not cancelled - set as "Offline"
        logInfo("monitor ZB Zb_THSensor_03", "Zb_THSensor_03 timed out - mark as offline")
        Zb_THSensor_03_Timer = null
    ])
end


rule "monitor ZB Zb_THSensor_04 availability"
when
    Item Zb_THSensor_04_temperature received update
then
    logInfo("monitor Zb_THSensor_04", "Zb_THSensor_04 mqtt received - mark as online")
    Zb_THSensor_04_reachable.postUpdate("Online")
    if(Zb_THSensor_04_Timer !== null) {
        Zb_THSensor_04_Timer.cancel
    }
    Zb_THSensor_04_Timer = createTimer(now.plusSeconds(Zb_TempSensor_Timeout), [| 
        Zb_THSensor_04_reachable.postUpdate("Offline")//execute if timer not cancelled - set as "Offline"
        logInfo("monitor ZB Zb_THSensor_04", "Zb_THSensor_04 timed out - mark as offline")
        Zb_THSensor_04_Timer = null
    ])
end

