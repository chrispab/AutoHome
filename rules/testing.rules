//presence rules
//switch on xmas lights when eslie gets home
rule "switch on lights when elsie gets home"
when
    // Item ElsieSIPhone_Online changed to ON
    // or
    // Item JoIPhone_Online changed to ON
    // or
    Item ChrisGalaxyS5_Online changed to ON
then
    if (now.getHourOfDay == 15){
        logInfo("RULE", "elsies or c or j phone connected to wifi @ 3-4 pm")
        sendCommand(gXmasLights, ON)
        sendCommand(gFairyLights, ON)
    }
end




rule "Turn ON AV Kit"
when
    Item TurnOnAV changed to ON
then
    logInfo("RULE", "Turn on the AV Kit")

    //turn on
    //{sendCommand(socketG2_1, OFF)} //con lights
    //{postUpdate(socketG2_1, OFF)}
    {sendCommand(socketG2_4, ON)} //tv
    {postUpdate(socketG2_4, ON)}
    {sendCommand(socketG2_3, ON)} // amp
    {postUpdate(socketG2_3, ON)}    
    //{sendCommand(socketG2_2, OFF)} //radio
    //{postUpdate(socketG2_2, OFF)}
    {sendCommand(Kodi_FR, ON)} //tv
    {postUpdate(Kodi_FR, ON)}
    //wake tv kodi box
end

rule "Turn OFF AV Kit"
when
    Item TurnOnAV changed to OFF
        
then
    logInfo("RULE", "Turn off the AV Kit")

    //turn on
    //{sendCommand(socketG2_1, OFF)} //con lights
    //{postUpdate(socketG2_1, OFF)}
    {sendCommand(socketG2_4, OFF)} //tv
    {postUpdate(socketG2_4, OFF)}
    {sendCommand(socketG2_3, OFF)} // amp
    {postUpdate(socketG2_3, OFF)}    
    //{sendCommand(socketG2_2, OFF)} //radio
    //{postUpdate(socketG2_2, OFF)}
    {sendCommand(Kodi_FR, OFF)} //tv
    {postUpdate(Kodi_FR, OFF)}
    //wake tv kodi box
    

end




rule "Delayed Off Switch"
when
    Item Delayed_OFF_SW changed
then
    logInfo("RULE", "delayed off switch")

        createTimer(now.plusSeconds(240), [|
        {sendCommand(socketG2_1, OFF)} //con lights
        {postUpdate(socketG2_1, OFF)}
        {sendCommand(socketG1_4, OFF)} // d room lights
        {postUpdate(socketG1_4, OFF)}
        {sendCommand(socketG2_4, OFF)} //tv
        {postUpdate(socketG2_4, OFF)}
        {sendCommand(socketG2_3, OFF)} // amp
        {postUpdate(socketG2_3, OFF)}    
        {sendCommand(socketG2_2, OFF)} //radio
        {postUpdate(socketG2_2, OFF)}
        // {sendCommand(socketG1_4, OFF)} // d room lights
        // {postUpdate(socketG1_4, OFF)}    
        //ensure heating is set to off also
        //CT_Heating_Setpoint.state = 17.0
    ])
end


rule "2 am turn off lights if i forgot"
when
    Time cron "0 30 02 ? * * *"
then
    logInfo("RULE", "turn off stuff if i forgot")
        {sendCommand(socketG2_1, OFF)} //con lights
        {postUpdate(socketG2_1, OFF)}
        {sendCommand(socketG1_4, OFF)} // d room lights
        {postUpdate(socketG1_4, OFF)}
        {sendCommand(socketG2_4, OFF)} //tv
         {postUpdate(socketG2_4, OFF)}
        // {sendCommand(socketG1_3, OFF)} // landing
        // {postUpdate(socketG1_3, OFF)}    
        {sendCommand(socketG2_2, OFF)} //radio
        {postUpdate(socketG2_2, OFF)}
    
end





rule "PIRsensor Turn ON lights"
when
    Item PIRState changed to ON
then
    logInfo("RULE", "pir on")
    //turn on
    {sendCommand(socketG3_3, ON)} //con lights
     {postUpdate(socketG3_3, ON)}
    //      {sendCommand(gIkeaLights, ON)} //
    // {postUpdate(gIkeaLights, ON)} 
    // {sendCommand(socketG1_3, ON)} //landinf lights
    // {postUpdate(socketG1_3, ON)}
    // {sendCommand(socketG1_4, ON)} //DR lights
    // {postUpdate(socketG1_4, ON)}    
end

rule "PIRsensor Turn OFF lights"
when
    Item PIRState changed to OFF
then
    logInfo("RULE", "pir off")
    //turn on
    {sendCommand(socketG3_3, OFF)} //con lights
     {postUpdate(socketG3_3, OFF)}
    // {sendCommand(socketG1_3, ON)} //landinf lights
    // {postUpdate(socketG1_3, ON)}
    // {sendCommand(socketG1_4, ON)} //DR lights
    // {postUpdate(socketG1_4, ON)}    
end

rule "zone3 lights on"
when
    Item Zone3LightStatus changed to ON
then
    {sendCommand(socketG2_1, OFF)} //con lights
    {postUpdate(socketG2_1, OFF)}
    
    logInfo("RULE", "Z3 lights - on")
            createTimer(now.plusSeconds(5), [|
            {sendCommand(socketG2_1, ON)} //fan
            {postUpdate(socketG2_1, ON)}
            //{postUpdate(socketG3_2, OFF)}
            logInfo("RULE", "pulse consv light OFF/ON")
        ])

 
end

