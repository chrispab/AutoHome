rule "StartUp conservatory_Heater"
when
    System started
then
    if (conservatory_HeatingMode == NULL) {
        conservatory_HeatingMode.postUpdate("auto") // start in master auto control mode
        conservatory_ThermostatMode.postUpdate("heat") // start in master auto control mode
        logInfo("ct_heating", "Executing 'System started' ct heat mode was NULL - set ct heating mode to 2 - heat")
    }
end

rule "Conservatory heating"
when
    Item conservatory_HeatingMode changed or
    Item conservatory_TemperatureSetpoint changed or
    Item conservatory_Temperature changed
then
    logInfo("CT_heating.rules", "CT Heating Mode or temp or target happened: ")
    logInfo("CT_heating.rules", "CT Heating Mode : " + conservatory_HeatingMode.state)
    if (conservatory_HeatingMode.state == "off") {
        logInfo("CT_heating.rules", "checking conservatory Heating Mode, turn heating OFF: " + conservatory_HeatingMode.state)
        conservatory_Heater.sendCommand(OFF)
        conservatory_Heater.postUpdate(OFF)
    }
    else if ( (conservatory_HeatingMode.state == "auto") || (conservatory_HeatingMode.state == "manual") )  { //auto
        logInfo("CT_heating.rules", "checking conservatory Heating Mode: " + conservatory_HeatingMode.state)
        var Number setpoint = conservatory_TemperatureSetpoint.state as DecimalType
        var Number turnOnTemp = setpoint //- 0.2// calculate the turn on/off temperatures
        var Number turnOffTemp = setpoint //+ 0.1
        var Number temp = conservatory_Temperature.state as DecimalType // get the current temperature
        if (temp >= turnOffTemp) {  // determine whether we need to turn on/off the heater
            logInfo("CT_heating.rules", "turn boiler OFF: " + temp)
            conservatory_Heater.sendCommand(OFF)
            conservatory_Heater.postUpdate(OFF)
        }else if (temp < turnOnTemp) {
            logInfo("CT_heating.rules", "turn boiler ON: " + temp)
            conservatory_Heater.sendCommand(ON)
            conservatory_Heater.postUpdate(ON)
        } 
    }
end

