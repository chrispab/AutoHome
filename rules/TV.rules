var Timer timer = null


rule "Turn ON AV Kit"
when
    Item TurnOnAV changed to ON
then
    logInfo("RULE", "Turn on the AV Kit")

    //turn on
    //{sendCommand(socketG2_1, OFF)} //con lights
    //{postUpdate(socketG2_1, OFF)}
    {sendCommand(socketG2_4, ON)} //tv
    {postUpdate(socketG2_4, ON)}
    {sendCommand(socketG2_3, ON)} // amp
    {postUpdate(socketG2_3, ON)}    
    //{sendCommand(socketG2_2, OFF)} //radio
    //{postUpdate(socketG2_2, OFF)}
    //{sendCommand(Kodi_FR, ON)} //tv
    //{postUpdate(Kodi_FR, ON)}
    //wake tv kodi box
end



rule "Turn OFF AV Kit"
when
    Item TurnOnAV changed to OFF
        
then
    logInfo("RULE", "Turn off the AV Kit")
    //shutdown kodi pi
    //val results = executeCommandLine ("sudo -u root -p libreelec ssh pi@192.168.0.112 sudo /sbin/shutdown now")
//    sendHttpGetRequest("http://192.168.0.26/jsonrpc?request={\"jsonrpc\":\"2.0\",\"method"\:\"System.Shutdown\",\"id\":1}")
    //sendHttpGetRequest("http://192.168.0.26/jsonrpc?request={"jsonrpc":"2.0","method":"System.Shutdown","id":1}")
   logInfo("RULE", "Sent shutdown command to pi")
    if(timer === null) {
        timer = createTimer(now.plusSeconds(30)) [|
            //MERelay1.postUpdate(OFF)
            logInfo("RULE", "30 secs later - we can turn off power now")
            timer = null]}

    //turn on
    //{sendCommand(socketG2_1, OFF)} //con lights
    //{postUpdate(socketG2_1, OFF)}
    {sendCommand(socketG2_4, OFF)} //tv
    {postUpdate(socketG2_4, OFF)}
    {sendCommand(socketG2_3, OFF)} // amp
    {postUpdate(socketG2_3, OFF)}    
    //{sendCommand(socketG2_2, OFF)} //radio
    //{postUpdate(socketG2_2, OFF)}
    //{sendCommand(Kodi_FR, OFF)} //tv
    //{postUpdate(Kodi_FR, OFF)}
    //wake tv kodi box
    

end
