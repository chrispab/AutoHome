
var Number sleepTemp = 17
var Number offTemp = 13
var Number liveTemp = 21
var Number midTemp = 19
var Number lowTemp = 16
var Number morningTemp = 20
var Number eveningTemp = 22
var Number highTemp = 22.5
var Number vhighTemp = 22.5
var Number wakeTemp = 19


// master heating mode - NORMAL mode rules
rule "00:00"
when
    Time cron "0 00 00 ? * MON-FRI *"
then
    CT_Heating_PresetTempNormal.postUpdate(sleepTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp)
    ER_Heating_PresetTempNormal.postUpdate(sleepTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp)
    BR_Heating_PresetTempNormal.postUpdate(sleepTemp)
    OF_Heating_PresetTempNormal.postUpdate(sleepTemp)
    HL_Heating_PresetTempNormal.postUpdate(sleepTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end

rule "00:30"
when
    Time cron "0 30 00 ? * MON-FRI *"
then
    CT_Heating_PresetTempNormal.postUpdate(sleepTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp )
    ER_Heating_PresetTempNormal.postUpdate(sleepTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp )
    BR_Heating_PresetTempNormal.postUpdate(sleepTemp)
    OF_Heating_PresetTempNormal.postUpdate(sleepTemp)
    HL_Heating_PresetTempNormal.postUpdate(sleepTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end

rule "01:00 - all heating low"
when
    Time cron "0 00 01 ? * * *"
then
    CT_Heating_PresetTempNormal.postUpdate(sleepTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp )
    ER_Heating_PresetTempNormal.postUpdate(sleepTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp )
    BR_Heating_PresetTempNormal.postUpdate(sleepTemp)
    OF_Heating_PresetTempNormal.postUpdate(sleepTemp)
    HL_Heating_PresetTempNormal.postUpdate(offTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end

rule "02:30 - all heating low"
when
    Time cron "0 30 02 ? * * *"
then
    CT_Heating_PresetTempNormal.postUpdate(sleepTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp )
    ER_Heating_PresetTempNormal.postUpdate(sleepTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp )
    BR_Heating_PresetTempNormal.postUpdate(sleepTemp)
    OF_Heating_PresetTempNormal.postUpdate(sleepTemp)
    HL_Heating_PresetTempNormal.postUpdate(offTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end

rule "start heating early if cold outside - 04:30 am"
when
    Time cron "0 30 04 ? * MON-FRI *"
then
    var Number temp = Outside_Temperature.state as DecimalType // get the current temperature
    if (temp < 2.0 ) {  // determine whether we need to turn on/off the heater
        logInfo("4:30 - check if cold enough to start heating", "starting cos outside temp = " + temp)

        CT_Heating_PresetTempNormal.postUpdate(vhighTemp)
        FR_Heating_PresetTempNormal.postUpdate(offTemp)
        ER_Heating_PresetTempNormal.postUpdate(offTemp)
        AT_Heating_PresetTempNormal.postUpdate(offTemp)
        BR_Heating_PresetTempNormal.postUpdate(offTemp)
        OF_Heating_PresetTempNormal.postUpdate(offTemp)
        HL_Heating_PresetTempNormal.postUpdate(offTemp)
        Heating_UpdateHeaters.sendCommand(ON)
    }
end

rule "start heating early if cold outside - 05:30 am"
when
    Time cron "0 00 05 ? * MON-FRI *"
then
    var Number temp = Outside_Temperature.state as DecimalType // get the current temperature
    if (temp < 10.0 ) {  // determine whether we need to turn on/off the heater
        logInfo("5:30 - check if cold enough to start heating", "starting cos outside temp = " + temp)

        CT_Heating_PresetTempNormal.postUpdate(vhighTemp)
        FR_Heating_PresetTempNormal.postUpdate(offTemp)
        ER_Heating_PresetTempNormal.postUpdate(offTemp)
        AT_Heating_PresetTempNormal.postUpdate(offTemp)
        BR_Heating_PresetTempNormal.postUpdate(offTemp)
        OF_Heating_PresetTempNormal.postUpdate(offTemp)
        HL_Heating_PresetTempNormal.postUpdate(offTemp)
        Heating_UpdateHeaters.sendCommand(ON)
    }
end

rule "NORMAL heating start - 06:10 am"
when
    Time cron "0 00 06 ? * MON-FRI *"
then
    CT_Heating_PresetTempNormal.postUpdate(vhighTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp)
    ER_Heating_PresetTempNormal.postUpdate(morningTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp)
    BR_Heating_PresetTempNormal.postUpdate(morningTemp)
    OF_Heating_PresetTempNormal.postUpdate(offTemp)
    HL_Heating_PresetTempNormal.postUpdate(offTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end

rule "heating 08:00 am"
when
    Time cron "0 0 08 ? * MON-FRI *"
then
    CT_Heating_PresetTempNormal.postUpdate(midTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp)
    ER_Heating_PresetTempNormal.postUpdate(offTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp)
    BR_Heating_PresetTempNormal.postUpdate(offTemp)
    OF_Heating_PresetTempNormal.postUpdate(offTemp)
    HL_Heating_PresetTempNormal.postUpdate(offTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end

rule "14:30"
when
    Time cron "0 30 14 ? * MON-FRI *"
then
    // CT_Heating_PresetTempNormal.postUpdate(21.0)
    //FR_Heating_PresetTempNormal.postUpdate(20.0)
    // ER_Heating_PresetTempNormal.postUpdate(17.0)
    // AT_Heating_PresetTempNormal.postUpdate(17.0)
    // BR_Heating_PresetTempNormal.postUpdate(17.0)
    //OF_Heating_PresetTempNormal.postUpdate(17.0)
    //HL_Heating_PresetTempNormal.postUpdate(17.0)
    Heating_UpdateHeaters.sendCommand(ON)
end


rule "afternoon - start heating early if cold outside - 03:00 pm"
when
    Time cron "0 00 15 ? * MON-FRI *"
then
    var Number temp = Outside_Temperature.state as DecimalType // get the current temperature
    if (temp < 5.0) {  // determine whether we need to turn on/off the heater
        CT_Heating_PresetTempNormal.postUpdate(vhighTemp)
        FR_Heating_PresetTempNormal.postUpdate(midTemp)
        ER_Heating_PresetTempNormal.postUpdate(midTemp)
        AT_Heating_PresetTempNormal.postUpdate(offTemp)
        BR_Heating_PresetTempNormal.postUpdate(offTemp)
        OF_Heating_PresetTempNormal.postUpdate(offTemp)
        HL_Heating_PresetTempNormal.postUpdate(offTemp)
        Heating_UpdateHeaters.sendCommand(ON)
    }
end

rule "16:00"
when
    Time cron "0 00 16 ? * MON-FRI *"
then
    CT_Heating_PresetTempNormal.postUpdate(vhighTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp)
    ER_Heating_PresetTempNormal.postUpdate(midTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp)
    BR_Heating_PresetTempNormal.postUpdate(midTemp)
    OF_Heating_PresetTempNormal.postUpdate(midTemp)
    HL_Heating_PresetTempNormal.postUpdate(midTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end

rule "21:00"
when
    Time cron "0 00 21 ? * MON-FRI *"
then
    // CT_Heating_PresetTempNormal.postUpdate(highTemp)
    // FR_Heating_PresetTempNormal.postUpdate(offTemp)
    // ER_Heating_PresetTempNormal.postUpdate(midTemp)
    // AT_Heating_PresetTempNormal.postUpdate(offTemp)
    BR_Heating_PresetTempNormal.postUpdate(midTemp)
    // OF_Heating_PresetTempNormal.postUpdate(midTemp)
    // HL_Heating_PresetTempNormal.postUpdate(midTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end

// rule "22:30 weekdays"
// when
//     Time cron "0 30 22 ? * MON-FRI *"
// then
//     CT_Heating_PresetTempNormal.postUpdate(highTemp)
//     FR_Heating_PresetTempNormal.postUpdate(offTemp)
//     ER_Heating_PresetTempNormal.postUpdate(midTemp)
//     AT_Heating_PresetTempNormal.postUpdate(offTemp)
//     BR_Heating_PresetTempNormal.postUpdate(midTemp)
//     OF_Heating_PresetTempNormal.postUpdate(midTemp)
//     HL_Heating_PresetTempNormal.postUpdate(offTemp)
//     Heating_UpdateHeaters.sendCommand(ON)
// end

rule "11:30pm weekdays"
when
    Time cron "0 30 23 ? * MON-FRI *"
then
    CT_Heating_PresetTempNormal.postUpdate(midTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp)
    ER_Heating_PresetTempNormal.postUpdate(sleepTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp)
    BR_Heating_PresetTempNormal.postUpdate(sleepTemp)
    OF_Heating_PresetTempNormal.postUpdate(offTemp)
    HL_Heating_PresetTempNormal.postUpdate(offTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end


rule "TEST  weekdays"
when
    Time cron "0 58 20 ? * MON-FRI *"
then
    logInfo("TEST CRON RULE", "test ran live temp" + liveTemp)

    // CT_Heating_PresetTempNormal.postUpdate(liveTemp)
    // FR_Heating_PresetTempNormal.postUpdate(liveTemp)
    // ER_Heating_PresetTempNormal.postUpdate(midTemp)
    // AT_Heating_PresetTempNormal.postUpdate(offTemp)
    // BR_Heating_PresetTempNormal.postUpdate(midTemp)
    // OF_Heating_PresetTempNormal.postUpdate(midTemp)
    // HL_Heating_PresetTempNormal.postUpdate(midTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end


rule "00:30 am weekend"
when
    Time cron "0 30 00 ? * SAT-SUN *"
then
    CT_Heating_PresetTempNormal.postUpdate(sleepTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp )
    ER_Heating_PresetTempNormal.postUpdate(sleepTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp )
    BR_Heating_PresetTempNormal.postUpdate(sleepTemp)
    OF_Heating_PresetTempNormal.postUpdate(sleepTemp)
    HL_Heating_PresetTempNormal.postUpdate(sleepTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end


rule "7:00 am weekend"
when
    Time cron "0 0 7 ? * SAT-SUN *"
then
    CT_Heating_PresetTempNormal.postUpdate(highTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp)
    ER_Heating_PresetTempNormal.postUpdate(midTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp)
    BR_Heating_PresetTempNormal.postUpdate(midTemp)
    OF_Heating_PresetTempNormal.postUpdate(offTemp)
    HL_Heating_PresetTempNormal.postUpdate(offTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end

rule "4:30pm weekend"
when
    Time cron "0 30 16 ? * SAT-SUN *"
then
    CT_Heating_PresetTempNormal.postUpdate(highTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp)
    ER_Heating_PresetTempNormal.postUpdate(midTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp)
    BR_Heating_PresetTempNormal.postUpdate(midTemp)
    OF_Heating_PresetTempNormal.postUpdate(offTemp)
    HL_Heating_PresetTempNormal.postUpdate(offTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end

rule "22:30pm weekend"
when
    Time cron "0 30 23 ? * SAT-SUN *"
then
    CT_Heating_PresetTempNormal.postUpdate(highTemp)
    FR_Heating_PresetTempNormal.postUpdate(offTemp)
    ER_Heating_PresetTempNormal.postUpdate(midTemp)
    AT_Heating_PresetTempNormal.postUpdate(offTemp)
    BR_Heating_PresetTempNormal.postUpdate(midTemp)
    OF_Heating_PresetTempNormal.postUpdate(lowTemp)
    HL_Heating_PresetTempNormal.postUpdate(lowTemp)
    Heating_UpdateHeaters.sendCommand(ON)
end


// rule "22:30pm weekend"
// when
//     Time cron "0 17 18 ? * SAT-SUN *"
// then
//     CT_Heating_PresetTempNormal.postUpdate(liveTemp)
//     FR_Heating_PresetTempNormal.postUpdate(lowTemp)
//     ER_Heating_PresetTempNormal.postUpdate(midTemp)
//     AT_Heating_PresetTempNormal.postUpdate(offTemp)
//     BR_Heating_PresetTempNormal.postUpdate(midTemp)
//     OF_Heating_PresetTempNormal.postUpdate(midTemp)
//     HL_Heating_PresetTempNormal.postUpdate(midTemp)
//     Heating_UpdateHeaters.sendCommand(ON)
// end


rule "test"
when
    Time cron "00 8 11 ? * * *"
then
    // CT_Heating_PresetTempNormal.postUpdate(17.0)
    // FR_Heating_PresetTempNormal.postUpdate(21.0)
    // ER_Heating_PresetTempNormal.postUpdate(22.0)
    // AT_Heating_PresetTempNormal.postUpdate(23.0)
    // BR_Heating_PresetTempNormal.postUpdate(24.0)
    //OF_Heating_PresetTempNormal.postUpdate(16.0)
    //HL_Heating_PresetTempNormal.postUpdate(16.0)
    Heating_UpdateHeaters.sendCommand(ON)
end

