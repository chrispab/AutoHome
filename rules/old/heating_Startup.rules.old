// var Timer MModeTimer = null
// var Timer ModesTimer = null
// var Timer TModesTimer = null

// rule "StartUp - set up Heating settings"
// when
//     System started
// then
//     logInfo("startup heating", "checking if master heating mode null")
//     if(MModeTimer === null) {
//         MModeTimer = createTimer(now.plusSeconds(60), [| 
//             if (masterHeatingMode.state == NULL) {
//                 masterHeatingMode.postUpdate("auto")
//                 logInfo("startup heating", "master heating mode was null - set master heating mode to - auto")
//             }
//             MModeTimer = null
//         ])
//     }

//     logInfo("startup heating", "checking if any room heating modes are null")
//     if(ModesTimer === null) {
//         ModesTimer = createTimer(now.plusSeconds(70), [| 
//             if ( gHeatingModes.state == NULL) {
//                 gHeatingModes.members.forEach[ String heatingMode | heatingMode.postUpdate("auto") ] 
//                 logInfo("startup heating", "heating mode was null - set heating mode to - auto")
//             }
//             ModesTimer = null
//         ])
//     }

//     logInfo("startup heating", "????????????????????????????????????????checking if any GA Thermostat modes are null")
//     if(TModesTimer === null) {//if timer not currently running
//         TModesTimer = createTimer(now.plusSeconds(80), [| 
//           logInfo("startup heating", "================================== timer executing")

//            if ( gThermostatModes.state == "notdef") {//if any states are - notdef
//               logInfo("startup h eating", ")))cc))))))))))xx))))))))))))))))))Setting GA Thermostat modes to heat")
//                gThermostatModes.members.forEach[  ThermoMode | ThermoMode.postUpdate("heat") ]
//             }
//             TModesTimer = null//mark as timer not running
//         ])
//     }

//     if (Boiler_Control === null) {
//         Boiler_Control.postUpdate(OFF)
//     }
// end