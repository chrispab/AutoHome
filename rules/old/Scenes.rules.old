// rule "StartUp - set up Item Scene_Goodnight"
// when
//     System started
// then
//     Scene_Goodnight.postUpdate(OFF)
// end


rule "Goodnight Going to bed"
when
	Item Scene_Goodnight changed from OFF to ON
then
    logInfo("RULE", "goodnight going to bed")
    {sendCommand(CT_FairyLights433Socket, OFF)} //con lights
    {postUpdate(CT_FairyLights433Socket, OFF)}
    ZbColourBulb01Switch.sendCommand(OFF)

    {sendCommand(radio, OFF)} //radio
    {postUpdate(radio, OFF)}
    vCT_TVKodiSpeakers.sendCommand(OFF)

    gZbAllBulbs.sendCommand(OFF)

    gZbAllBulbs.postUpdate(OFF)
    // gIkeaLights.sendCommand(0)
    // gIkeaLights.postUpdate(0)
    //set rads temps to off
    CT_Heating_PresetTempNormal.postUpdate(17.0)
    FR_Heating_PresetTempNormal.postUpdate(14.0)
    ER_Heating_PresetTempNormal.postUpdate(17.0)
    AT_Heating_PresetTempNormal.postUpdate(14.0)
    BR_Heating_PresetTempNormal.postUpdate(17.0)
    OF_Heating_PresetTempNormal.postUpdate(17.0)
    HL_Heating_PresetTempNormal.postUpdate(17.0)
    Heating_UpdateHeaters.sendCommand(ON)    
    logInfo("RULE", "Item Scene_Goodnight received command ON")

    createTimer(now.plusSeconds(240), [|
        {sendCommand(DR_FairyLights433Socket, OFF)} // d room lights
        {postUpdate(DR_FairyLights433Socket, OFF)}
        logInfo("RULE", "Item Scene_Goodnight now set to OFF again")
    ])

    Scene_Goodnight.postUpdate(OFF)
end