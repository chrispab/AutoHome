

        code usage in YAML: view of a component/widget
        visible: =items.TV_Powered.state === 'ON' && items.TV_Input.state === 'HDMI1'

        visible: =items.KodiConservatory_fanart.state


        KodiConservatory_fanart


        component: oh-slider-card
        config:
          item: KodiConservatory_currenttime
          outline: true
          title: track time
          max: =items.KodiConservatory_duration
        slots: null

        footer: =items.KodiConservatory_album.state

        =items.KodiConservatory_ctp.state.intValue()

        =items.CT_Temperature.state




        component: oh-gauge-card
        config:
          item: KodiConservatory_currenttime
          min: 0
          max: =items.KodiConservatory_duration.rawState.intValue()
          outline: true
          title: Track %
          type: circle
          valueTextColor: red
        slots: null
        component: oh-gauge-card
        config:
          item: KodiConservatory_currenttime
          min: 0
          max: =items.KodiConservatory_duration.rawState.intValue()
          outline: true
          title: Track %
          type: circle
          valueTextColor: red
        slots: null
        component: oh-gauge-card
        config:
          min: 0
          max: =items.KodiConservatory_duration.rawState.intValue()
          outline: true
          title: Track time
          type: circle
          valueTextColor: red
          value: =items.KodiConservatory_currenttime.rawState.intValue()
          valueText: =items.KodiConservatory_currenttime.state
        slots: null
        =items.KodiConservatory_duration.split(' ')[0].intValue()
        =items.KodiConservatory_duration.state.split(' ')[0]

        =(Number.parseFloat(items.MainFloor_Humidity.state.split(" ")[0]) < 35) ? "red" : (Number.parseFloat(items.MainFloor_Humidity.state.split(" ")[0]) < 75) ? "yellow" : "blue"

        =Number.parseInt(items.KodiConservatory_duration.state.split(' ')[0])
        KodiConservatory_currenttime
        =Number.parseFloat(items.KodiConservatory_currenttime.state.split(' ')[0])
        component: oh-gauge-card
        config:
          min: 0
          max: =Number.parseFloat(items.KodiConservatory_duration.state.split(' ')[0])
          outline: true
          title: Track time
          type: circle
          valueTextColor: red
          value: =Number.parseFloat(items.KodiConservatory_currenttime.state.split(' ')[0])
          valueText: =items.KodiConservatory_currenttime.state
        slots: null
        =items.KodiConservatory_ctp.state.toString()
        =Number.parseInt(items.KodiConservatory_ctp.state.split(' ')[0])



  timerange: from=now-2w&to=now;2w,from=now-1w&to=now;1w,from=now-3d&to=now;3d,from=now-1d&to=now;24hr,from=now-8h&to=now;8hr,from=now-4h&to=now;4hr,from=now-1h&to=now;1hr


title: '=(props.item) ? "State of " + props.item : "Set props to test!"'

title: "=props.title + ', ' + (items[props.moisture_pc].state) + ', ' + (items[props.moisture_raw].state)"



                      - component: oh-button
                        config:
                          color: '=((items[props.onBtnItem].state == "ON") || (items[props.onBtnItem].state > 0)) ? props.btnTextColor : "blue"'
                          fill: "=(items[props.onBtnItem].state == 'ON')  ? true : false"
                          outline: true
                          round: false
                          small: true
                          action: command
                          actionItem: =props.onBtnItem
                          actionCommand: ON
                          text: on
                          style:
                            font-size: min(max(5px, 2.1vw), 20px)
                            width: auto
                            height: auto

IRRemote_prefix

color: '=((items[props.IRRemote_prefix + "PowerOn"].state == "ON")) ? props.btnTextColor : "blue"'
fill: "=(items[props.IRRemote_prefix + 'PowerOn'].state == 'ON')  ? true : false"
actionItem: =props.IRRemote_prefix + "PowerOn"

color: '=((items[props.IRRemote_prefix + "PowerOff"].state == "ON")) ? props.btnTextColor : "blue"'
actionItem: =props.IRRemote_prefix + "PowerOff"
