uid: Thermostat-Control-dev3
tags: []
props:
  parameters:
    - description: eg. living room
      label: location and widget identifier
      name: location
      required: true
      type: TEXT
    - description: Thermostat to control
      label: Description
      name: Title
      required: false
      type: TEXT
    - context: item
      description: The current Temperature item
      label: Current Temperature Item
      name: tempItem
      required: true
      type: TEXT
    - context: item
      description: Setpoint item
      label: Setpoint Item
      name: setpointItem
      required: true
      type: TEXT
    - context: command
      description: Minimum temp
      label: Minimum temp
      name: minimumTemp
      required: true
      type: TEXT
    - context: command
      description: Maximum Temp
      label: Maximum Temp
      name: maximumTemp
      required: true
      type: TEXT
    - context: item
      description: Heating Mode item
      label: Heating Mode Item
      name: heatingModeItem
      required: true
      type: TEXT
    - context: item
      description: Heater state item
      label: Heater state item
      name: heatingStateItem
      required: true
      type: TEXT
    - description: Heating mode strings as csv eg. AUTO,MANU,OFF. The string will be sent to the Heating-Mode-Item [String-Item]
      label: Heating Mode Array
      name: heatingModeArray
      required: false
      type: TEXT
timestamp: Feb 22, 2021, 10:21:57 PM
component: f7-card
config:
  outline: true
  noBorder: false
  padding: true
  noShadow: false
  style:
    --f7-card-margin-horizontal: 5px
    --f7-card-content-padding-vertical: 0px
    --f7-card-content-padding-horizontal: 16px
    --f7-card-border-radius: 10px
    --f7-card-box-shadow: 0px 5px 10px rgba(0,0,0,0.15)
    --f7-card-header-font-size: 14px
    --f7-card-header-font-weight: 600
slots:
  content:
    - component: oh-label-card
      config:
        noShadow: true
        trendItem: =(props.tempItem)
        action: analyzer
        actionAnalyzerItems: =[props.tempItem,props.setpointItem]
        item: =(props.tempItem)
        title: =(props.Title)
        icon: "=(items[props.heatingStateItem].state == 'ON') ? 'f7:flame_fill' : 'f7:flame'"
        iconColor: "=(items[props.heatingStateItem].state == 'ON') ? 'red' : 'blue'"
        actionAnalyzerCoordSystem: time
        vertical: false
    - component: f7-row
      config:
        noGap: true
        class:
          - padding-bottom
      slots:
        default:
          - component: f7-col
            slots:
              default:
                - component: f7-icon
                  config:
                    #f7: "=(items[props.heatingStateItem].state == 'ON') ? 'hand_point_left' : 'hand_point_left'"
                    f7: lightbulb
                    #color-red: "=(items[props.heatingStateItem].state == 'ON') ? 'red' : 'blue'"
                    #color-red: true
                    color: red
                    style:
                      #font-size: "=props.fontSizeButtons ? props.fontSizeButtons : '2em'"
                      #animation: "=(items[props.heatingStateItem].state == 'ON') ? 'skeleton-effect-fade 2s linear infinite' : ''"
                      #left: 50%           
                      #color: "=(items[props.heatingStateItem].state == 'ON') ? 'red' : 'blue'"
                      #icon-color: green
        
          - component: f7-col
            slots:
              default:
                - component: oh-button
                  config:
                    class:
                      - padding-right
                    popoverOpen: ='.' + props.location + '.popoverHeatingMode'
                    style:
                      color: "=props.colorButton ? props.colorButton + ' !important': ''"
                      margin-top: 13px
                      
                      
                      
                  slots:
                    default:
                      - component: f7-icon
                        config:
                          f7: "=(items[props.heatingModeItem].state == 'manual' ? 'hand_point_left' : items[props.heatingModeItem].state == 'auto' ? 'arrow_2_squarepath' : items[props.heatingModeItem].state == 'off' ? 'stop_circle' : 'thermometer')"
                          style:
                            font-size: "=props.fontSizeButtons ? props.fontSizeButtons : '2em'"
                      - component: f7-popover
                        config:
                          class: =props.location + ' popoverHeatingMode'
                        slots:
                          default:
                            - component: f7-card
                              config:
                                noShadow: true
                                class:
                                  - popover-close
                                action: variable
                                actionVariable: myVar
                                clearVariable: true
                                actionVariableValue: success
                              slots:
                                default:
                                  - component: f7-row
                                    config: {}
                                    slots:
                                      default:
                                        - component: f7-col
                                          slots:
                                            default:
                                              - component: oh-repeater
                                                config:
                                                  for: buttonlabel
                                                  in: =props.heatingModeArray.split(",")
                                                slots:
                                                  default:
                                                    - component: oh-button
                                                      config:
                                                        color: =props.colorButton?props.colorButton:''
                                                        class: margin
                                                        text: =loop.buttonlabel
                                                        outline: true
                                                        action: command
                                                        active: "=(items[props.heatingModeItem].state == loop.buttonlabel ? true : false)"
                                                        actionCommand: =loop.buttonlabel
                                                        actionItem: =props.heatingModeItem
                                                        
                                                        
          - component: f7-col
            slots:
              default:
                - component: oh-stepper-card
                  config:
                    noShadow: true
                    color-theme: gray
                    item: =(props.setpointItem)
                    large: true
                    autorepeat: true
                    fill: false
                    raised: true
                    min: =(props.minimumTemp-1)
                    max: =(props.maximumTemp+1)
                    step: 0.5
                    style:
                      margin-left: 0px
