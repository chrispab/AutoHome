https://crazyivan359.github.io/openhab-helper-libraries/Getting%20Started/Installation.html

Use the Karaf logging commands to enable debug logging for automation:
log:set DEBUG org.openhab.core.automation. Leave this on for setup and testing,
but you may want to set to WARN when everything is setup.
For older openHAB builds before the ESH reintegration (older than snapshot 1566 and 2.5M2), you will need to change this to org.eclipse.smarthome.automation.

Enable debug logging for jsr223: log:set DEBUG jsr223. This is the default logger used in the examples and the helper libraries.

log:set WARN org.openhab.core.automation
log:set DEBUG jsr223

https://community.openhab.org/t/event-state-logging-in-events-log-dosnt-work/137937

log:list


Use logging levels to help control what gets logged. If you use a unique logger name per rule or related group of rules then you can put a lot of the testing and information log statements at the debug level. When working on those rules change the logging config to DEBUG just for that logger. When done move the level back to INFO and all that noise will go away.

log:set DEBUG boiler
log:set WARN boiler
log:set DEBUG org.openhab.automation.script.boiler
log:set WARN org.openhab.automation.openhab-js.boiler
log:set DEBUG org.openhab.automation.openhab-js.boiler

you should always have a dedicated rule that in turn initializes all of your items and variables to a
proper default state.
Run it on OH startup and whenever things have gone wrong and you need or want to reset the system.



shell:info

filtering logs

https://www.openhab.org/docs/administration/logging.html

https://community.openhab.org/t/openhab-filtering-event-logs/38277/8

https://community.openhab.org/t/how-to-watch-and-look-through-logging/35112

tail  /var/log/openhab/events.log -F | grep CPU

