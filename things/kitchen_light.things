Thing mqtt:topic:KT_light_1  "MQTT Thing: KT_light_1" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Channels:
        Type switch : powerSwitch  [ stateTopic="KT_light_1/stat/POWER" , commandTopic="KT_light_1/cmnd/POWER", on="ON", off="OFF" ]
        Type string : Reachable    [ stateTopic="KT_light_1/tele/LWT"  ]
        Type number : rssi         [ stateTopic="KT_light_1/tele/STATE",  transformationPattern="JSONPATH:$.Wifi.RSSI" ]
}
Thing mqtt:topic:KT_light_2  "MQTT Thing: KT_light_2" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Channels:
        Type switch : powerSwitch  [ stateTopic="KT_light_2/stat/POWER" , commandTopic="KT_light_2/cmnd/POWER", on="ON", off="OFF" ]
        Type string : Reachable    [ stateTopic="KT_light_2/tele/LWT"  ]
        Type number : rssi         [ stateTopic="KT_light_2/tele/STATE",  transformationPattern="JSONPATH:$.Wifi.RSSI" ]
}
// Thing mqtt:topic:WiFiSocket2  "MQTT Thing: WiFi Power Socket 2" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
// {
//     Channels:
//         Type switch : powerSwitch  [ stateTopic="wiFiSocket2/stat/POWER" , commandTopic="wiFiSocket2/cmnd/POWER", on="ON", off="OFF" ]
//         Type string : Reachable    [ stateTopic="wiFiSocket2/tele/LWT"  ]
//         Type number : rssi         [ stateTopic="wiFiSocket2/tele/STATE",  transformationPattern="JSONPATH:$.Wifi.RSSI" ]
// }

// Thing mqtt:topic:WiFiSocket3  "MQTT Thing: WiFi Power Socket 3" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
// {
//     Channels:
//         Type switch : powerSwitch  [ stateTopic="wiFiSocket3/stat/POWER" , commandTopic="wiFiSocket3/cmnd/POWER", on="ON", off="OFF" ]
//         Type string : Reachable    [ stateTopic="wiFiSocket3/tele/LWT"  ]
//         Type number : rssi         [ stateTopic="wiFiSocket3/tele/STATE",  transformationPattern="JSONPATH:$.Wifi.RSSI" ]
// }

// Thing mqtt:topic:WiFiSocket4  "MQTT Thing: WiFi Power Socket 4" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
// {
//     Channels:
//         Type switch : powerSwitch  [ stateTopic="wiFiSocket4/stat/POWER" , commandTopic="wiFiSocket4/cmnd/POWER", on="ON", off="OFF" ]
//         Type string : Reachable    [ stateTopic="wiFiSocket4/tele/LWT"  ]
//         Type number : rssi         [ stateTopic="wiFiSocket4/tele/STATE",  transformationPattern="JSONPATH:$.Wifi.RSSI" ]
//         Type number : temperature  [ stateTopic="wiFiSocket4/tele/SENSOR",  transformationPattern="JSONPATH:$.DS18B20.Temperature" ]
// }

// Thing mqtt:topic:WiFiSocket5  "MQTT Thing: WiFi Power Socket 5" (mqtt:broker:MyMQTTBroker) @ "Bedroom"
// {
//     Channels:
//         Type switch : powerSwitch  [ stateTopic="wiFiSocket5/stat/POWER" , commandTopic="wiFiSocket5/cmnd/POWER", on="ON", off="OFF" ]
//         Type string : Reachable    [ stateTopic="wiFiSocket5/tele/LWT"  ]
//         Type number : rssi         [ stateTopic="wiFiSocket5/tele/STATE",  transformationPattern="JSONPATH:$.Wifi.RSSI" ]
// }

// Thing mqtt:topic:WiFiSocket6  "MQTT Thing: WiFi Power Socket_6" (mqtt:broker:MyMQTTBroker) @ "Elsies Room"
// {
//     Channels:
//         Type switch : powerSwitch  [ stateTopic="wiFiSocket6/stat/POWER" , commandTopic="wiFiSocket6/cmnd/POWER", on="ON", off="OFF" ]
//         Type string : Reachable    [ stateTopic="wiFiSocket6/tele/LWT"  ]
//         Type number : rssi         [ stateTopic="wiFiSocket6/tele/STATE",  transformationPattern="JSONPATH:$.Wifi.RSSI" ]
// }