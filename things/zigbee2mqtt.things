// Bridge mqtt:broker:mymqttbroker [ host="mymqttbrokeripaddr", secure=false ]
// {
//     Thing topic zigbeebridge "Zigbee2mqtt Bridge" {
//     Channels:
//         Type switch : permitJoin         [ commandTopic="zigbee2mqtt/bridge/config/permit_join", on="true", off="false" ]
//         Type string : state              [ stateTopic="zigbee2mqtt/bridge/state" ]
//         Type string : logType            [ stateTopic="zigbee2mqtt/bridge/log",  transformationPattern="JSONPATH:$.type" ]
//         Type string : logMessage         [ stateTopic="zigbee2mqtt/bridge/log",  transformationPattern="JSONPATH:$.message" ]
//     }

//     Thing topic ikeabulb01 "IKEA Bulb 01" {
//     Channels:
//         Type switch : switch "Ikea Bulb 01 Switch" [ stateTopic="zigbee2mqtt/ikeabulb01", commandTopic="zigbee2mqtt/ikeabulb01/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:switch2Zigbee2mqtt.js"]
//         Type dimmer : dimmer "Ikea Bulb 01 Dimmer" [ stateTopic="zigbee2mqtt/ikeabulb01", commandTopic="zigbee2mqtt/ikeabulb01/set", min=0, max=100, step=1, transformationPatternOut="JS:openhabdimmer2zigbeebridge.js", transformationPattern="JS:tradfri2openhab.js" ]
//         Type number : linkquality "Ikea Bulb 01 LinkQuality" [ stateTopic="zigbee2mqtt/ikeabulb01",  transformationPattern="JSONPATH:$.linkquality" ]
//     }

//     Thing topic huewhite02 "Philips HUE White 02" {
//     Channels:
//         Type switch : switch "Hue White 02 Switch" [ stateTopic="zigbee2mqtt/huewhite02", commandTopic="zigbee2mqtt/huewhite02/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:switch2Zigbee2mqtt.js"]
//         Type dimmer : dimmer "Hue White 02 Dimmer" [ stateTopic="zigbee2mqtt/huewhite02", commandTopic="zigbee2mqtt/huewhite02/set", min=0, max=100, step=1, transformationPatternOut="JS:openhabdimmer2zigbeebridge.js", transformationPattern="JS:huewhite2openhab.js" ]
//         Type number : linkquality "Hue White 02 LinkQuality" [ stateTopic="zigbee2mqtt/huewhite02",  transformationPattern="JSONPATH:$.linkquality" ]
//     }
// }
//  Currently 5 devices are joined:5
//  ikeabulb01 (0x000b57fffebe2091): LED1623G12 - IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, opal white (Router)
//  ikearemote01 (0x14b457fffe3f625d): E1524/E1810 - IKEA TRADFRI remote control (EndDevice)
//  ikeabulb02 (0x000b57fffebb2777): LED1623G12 - IKEA TRADFRI LED bulb E27 1000 lumen, dimmable, opal white (Router)
//  ikeacolourbulb01 (0x14b457fffe2e9489): LED1624G9 - IKEA TRADFRI LED bulb E14/E26/E27 600 lumen, dimmable, color, opal white (Router)
//  ikeacolourbulb02 (0x14b457fffe3bf669): LED1624G9 - IKEA TRADFRI LED bulb E14/E26/E27 600 lumen, dimmable, color, opal white (Router)


Thing mqtt:topic:zigbeebridge "Zigbee2mqtt Bridge" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
Channels:
    Type switch : permitJoin         [ commandTopic="zigbee2mqtt/bridge/config/permit_join", on="true", off="false" ]
    Type string : state              [ stateTopic="zigbee2mqtt/bridge/state" ]
    Type string : logType            [ stateTopic="zigbee2mqtt/bridge/log",  transformationPattern="JSONPATH:$.type" ]
    Type string : logMessage         [ stateTopic="zigbee2mqtt/bridge/log",  transformationPattern="JSONPATH:$.message" ]
}

Thing mqtt:topic:zigbeerouter01 "Zigbee Router 01" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
Channels:
    // Type switch : permitJoin         [ commandTopic="zigbee2mqtt/bridge/config/permit_join", on="true", off="false" ]
    // Type string : state              [ stateTopic="zigbee2mqtt/bridge/state" ]
    // Type string : logType            [ stateTopic="zigbee2mqtt/bridge/log",  transformationPattern="JSONPATH:$.type" ]
    // Type string : logMessage         [ stateTopic="zigbee2mqtt/bridge/log",  transformationPattern="JSONPATH:$.message" ]
    Type number : linkquality "Zigbee Router 01 LinkQuality" [ stateTopic="zigbee2mqtt/router01",  transformationPattern="JSONPATH:$.linkquality" ]
    Type string : reachable "Zigbee Router 01 Reachable"
}

Thing mqtt:topic:ikeabulb01 "IKEA Bulb 01" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
Channels:
    Type switch : switch "Ikea Bulb 01 Switch" [ stateTopic="zigbee2mqtt/ikeabulb01", commandTopic="zigbee2mqtt/ikeabulb01/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:switch2zigbee2mqtt.js"]
    Type dimmer : dimmer "Ikea Bulb 01 Dimmer" [ stateTopic="zigbee2mqtt/ikeabulb01", commandTopic="zigbee2mqtt/ikeabulb01/set", min=0, max=100, step=1, transformationPatternOut="JS:openhabdimmer2zigbeebridge.js", transformationPattern="JS:tradfri2openhab.js" ]
    Type number : linkquality "Ikea Bulb 01 LinkQuality" [ stateTopic="zigbee2mqtt/ikeabulb01",  transformationPattern="JSONPATH:$.linkquality" ]
}

Thing mqtt:topic:ikeabulb02 "IKEA Bulb 02" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
Channels:
    Type switch : switch "Ikea Bulb 02 Switch" [ stateTopic="zigbee2mqtt/ikeabulb02", commandTopic="zigbee2mqtt/ikeabulb02/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:switch2zigbee2mqtt.js"]
    Type dimmer : dimmer "Ikea Bulb 02 Dimmer" [ stateTopic="zigbee2mqtt/ikeabulb02", commandTopic="zigbee2mqtt/ikeabulb02/set", min=0, max=100, step=1, transformationPatternOut="JS:openhabdimmer2zigbeebridge.js", transformationPattern="JS:tradfri2openhab.js" ]
    Type number : linkquality "Ikea Bulb 02 LinkQuality" [ stateTopic="zigbee2mqtt/ikeabulb02",  transformationPattern="JSONPATH:$.linkquality" ]
}

//colour bulbs
Thing mqtt:topic:ikeacolourbulb01 "IKEA Colour Bulb 01" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
Channels:
    Type switch : switch "Ikea Colour Bulb 01 Switch" [ stateTopic="zigbee2mqtt/ikeacolourbulb01", commandTopic="zigbee2mqtt/ikeacolourbulb01/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:switch2zigbee2mqtt.js"]
    Type dimmer : dimmer "Ikea Colour Bulb 01 Dimmer" [ stateTopic="zigbee2mqtt/ikeacolourbulb01", commandTopic="zigbee2mqtt/ikeacolourbulb01/set", min=0, max=100, step=1, transformationPatternOut="JS:openhabdimmer2zigbeebridge.js", transformationPattern="JS:tradfri2openhab.js" ]
    Type number : linkquality "Ikea Colour Bulb 01 LinkQuality" [ stateTopic="zigbee2mqtt/ikeacolourbulb01",  transformationPattern="JSONPATH:$.linkquality" ]
    Type colorRGB : color "Ikea Colour Bulb 01 Color" [ stateTopic="zigbee2mqtt/ikeacolourbulb01", commandTopic="zigbee2mqtt/ikeacolourbulb01/set", transformationPatternOut="JS:bulbColorFix.js" ]
}

Thing mqtt:topic:ikeacolourbulb02 "IKEA Colour Bulb 02" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
Channels:
    Type switch : switch "Ikea Colour Bulb 02 Switchs" [ stateTopic="zigbee2mqtt/ikeacolourbulb02", commandTopic="zigbee2mqtt/ikeacolourbulb02/set", transformationPattern="JSONPATH:$.state", transformationPatternOut="JS:switch2zigbee2mqtt.js"]
    Type dimmer : dimmer "Ikea Colour Bulb 02 Dimmer" [ stateTopic="zigbee2mqtt/ikeacolourbulb02", commandTopic="zigbee2mqtt/ikeacolourbulb02/set", min=0, max=100, step=1, transformationPatternOut="JS:openhabdimmer2zigbeebridge.js", transformationPattern="JS:tradfri2openhab.js" ]
    Type number : linkquality "Ikea Colour Bulb 02 LinkQuality" [ stateTopic="zigbee2mqtt/ikeacolourbulb02",  transformationPattern="JSONPATH:$.linkquality" ]
    // Type color : color "Ikea Colour Bulb 02e Color" [ stateTopic="zigbee2mqtt/ikeacolourbulb02", commandTopic="zigbee2mqtt/ikeacolourbulb02/set", transformationPatternOut="JS:hsv2xyz.js" ]
    Type colorRGB : color "Ikea Colour Bulb 02 Color" [ stateTopic="zigbee2mqtt/ikeacolourbulb02", commandTopic="zigbee2mqtt/ikeacolourbulb02/set", transformationPatternOut="JS:bulbColorFix.js" ]

}
 
    // Type color : color "Ikea Colour Bulb 02 Color" [ stateTopic="zigbee2mqtt/ikeacolourbulb02", commandTopic="zigbee2mqtt/ikeacolourbulb02/set" ]
Thing mqtt:topic:ikearemote01 "Tradfri Remote 01" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Type string : action            [stateTopic="zigbee2mqtt/ikearemote01", transformationPattern="JSONPATH:$.action" ]
    // Type string : arrow_left_click  [stateTopic="zigbee2mqtt/ikearemote01", transformationPattern="JSONPATH:$.action", on="arrow_left_click" ]
    // Type string : arrow_right_click  [stateTopic="zigbee2mqtt/ikearemote01", transformationPattern="JSONPATH:$.action", on="arrow_right_click" ]
    // Type string : brightness_up_click  [stateTopic="zigbee2mqtt/ikearemote01", transformationPattern="JSONPATH:$.action", on="brightness_up_click" ]
    // Type string : brightness_down_click  [stateTopic="zigbee2mqtt/ikearemote01", transformationPattern="JSONPATH:$.action", on="brightness_down_click" ]

    Type number : linkquality "Ikea remote 1 LinkQuality" [ stateTopic="zigbee2mqtt/ikearemote01",  transformationPattern="JSONPATH:$.linkquality" ]
    Type number : battery "Ikea remote 1 LinkQuality" [ stateTopic="zigbee2mqtt/ikearemote01",  transformationPattern="JSONPATH:$.battery" ]

}



// Jul 21 10:25:32 pi3b npm[7542]: zigbee2mqtt:info  2020-07-21 10:25:32: Device '0x00158d00053f5d8d' joined
// Jul 21 10:25:32 pi3b npm[7542]: zigbee2mqtt:info  2020-07-21 10:25:32: Starting interview of '0x00158d00053f5d8d'
// Jul 21 10:25:32 pi3b npm[7542]: zigbee2mqtt:info  2020-07-21 10:25:32: MQTT publish: topic 'zigbee2mqtt/bridge/log', payload '{"type":"device_connected","message":{"friendly_name":"0x00158d00053f5d8d"}}'
// Jul 21 10:25:32 pi3b npm[7542]: zigbee2mqtt:info  2020-07-21 10:25:32: MQTT publish: topic 'zigbee2mqtt/bridge/log', payload '{"type":"pairing","message":"interview_started","meta":{"friendly_name":"0x00158d00053f5d8d"}}'
// Jul 21 10:25:33 pi3b npm[7542]: zigbee2mqtt:info  2020-07-21 10:25:33: MQTT publish: topic 'zigbee2mqtt/bridge/log', payload '{"type":"device_announced","message":"announce","meta":{"friendly_name":"0x00158d00053f5d8d"}}'
// Jul 21 10:25:33 pi3b npm[7542]: zigbee2mqtt:info  2020-07-21 10:25:33: MQTT publish: topic 'zigbee2mqtt/0x00158d00053f5d8d', payload '{"battery":100,"voltage":3055,"temperature":24.28,"humidity":87.27,"pressure":1018.7,"linkquality":126}'
Thing mqtt:topic:THPSensor01 "Xiaomi THPSensor01" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Type number : temperature            [stateTopic="zigbee2mqtt/THPSensor01", transformationPattern="JSONPATH:$.temperature" ]
    Type number : humidity            [stateTopic="zigbee2mqtt/THPSensor01", transformationPattern="JSONPATH:$.humidity" ]
    Type number : pressure            [stateTopic="zigbee2mqtt/THPSensor01", transformationPattern="JSONPATH:$.pressure" ]
    Type number : linkquality "Xiaomi Temp Humi pressure Sensor 01 LinkQuality" [ stateTopic="zigbee2mqtt/THPSensor01",  transformationPattern="JSONPATH:$.linkquality" ]
    Type number : battery "Xiaomi Temp Humi pressure Sensor 01 battery" [ stateTopic="zigbee2mqtt/THPSensor01",  transformationPattern="JSONPATH:$.battery" ]
    Type number : voltage "Xiaomi Temp Humi pressure Sensor 01 voltage" [ stateTopic="zigbee2mqtt/THPSensor01",  transformationPattern="JSONPATH:$.voltage" ]
    Type string : reachable "Xiaomi THPSensor01 Reachable"

}


// ! THSensor01 (0x00158d0003fb1bdb): WSDCGQ01LM - Xiaomi MiJia temperature & humidity sensor (EndDevice)
Thing mqtt:topic:THSensor01 "Xiaomi Temp Humi Sensor 01" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Type number : temperature            [stateTopic="zigbee2mqtt/THSensor01", transformationPattern="JSONPATH:$.temperature" ]
    Type number : humidity            [stateTopic="zigbee2mqtt/THSensor01", transformationPattern="JSONPATH:$.humidity" ]
    Type number : linkquality "Xiaomi Temp Humi Sensor 01 LinkQuality" [ stateTopic="zigbee2mqtt/THSensor01",  transformationPattern="JSONPATH:$.linkquality" ]
    Type number : battery "Xiaomi Temp Humi Sensor 01 battery" [ stateTopic="zigbee2mqtt/THSensor01",  transformationPattern="JSONPATH:$.battery" ]
    Type number : voltage "Xiaomi Temp Humi Sensor 01 voltage" [ stateTopic="zigbee2mqtt/THSensor01",  transformationPattern="JSONPATH:$.voltage" ]
    Type string : reachable "Xiaomi THSensor01 Reachable"
    // Type timer  : timer "Xiaomi THSensor01 timer"

}

Thing mqtt:topic:THSensor02 "Xiaomi Temp Humi Sensor 02" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Type number : temperature            [stateTopic="zigbee2mqtt/THSensor02", transformationPattern="JSONPATH:$.temperature" ]
    Type number : humidity            [stateTopic="zigbee2mqtt/THSensor02", transformationPattern="JSONPATH:$.humidity" ]
    Type number : linkquality "Xiaomi Temp Humi Sensor 02 LinkQuality" [ stateTopic="zigbee2mqtt/THSensor02",  transformationPattern="JSONPATH:$.linkquality" ]
    Type number : battery "Xiaomi Temp Humi Sensor 02 battery" [ stateTopic="zigbee2mqtt/THSensor02",  transformationPattern="JSONPATH:$.battery" ]
    Type number : voltage "Xiaomi Temp Humi Sensor 02 voltage" [ stateTopic="zigbee2mqtt/THSensor02",  transformationPattern="JSONPATH:$.voltage" ]
    Type string : reachable "Xiaomi THSensor02 Reachable"

}

Thing mqtt:topic:THSensor03 "Xiaomi Temp Humi Sensor 03" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Type number : temperature            [stateTopic="zigbee2mqtt/THSensor03", transformationPattern="JSONPATH:$.temperature" ]
    Type number : humidity            [stateTopic="zigbee2mqtt/THSensor03", transformationPattern="JSONPATH:$.humidity" ]
    Type number : linkquality "Xiaomi Temp Humi Sensor 03 LinkQuality" [ stateTopic="zigbee2mqtt/THSensor03",  transformationPattern="JSONPATH:$.linkquality" ]
    Type number : battery "Xiaomi Temp Humi Sensor 03 Battery" [ stateTopic="zigbee2mqtt/THSensor03",  transformationPattern="JSONPATH:$.battery" ]
    Type number : voltage "Xiaomi Temp Humi Sensor 03 voltage" [ stateTopic="zigbee2mqtt/THSensor03",  transformationPattern="JSONPATH:$.voltage" ]
    Type string : reachable "Xiaomi THSensor03 Reachable"

}

Thing mqtt:topic:THSensor04 "Xiaomi Temp Humi Sensor 04" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Type number : temperature            [stateTopic="zigbee2mqtt/THSensor04", transformationPattern="JSONPATH:$.temperature" ]
    Type number : humidity            [stateTopic="zigbee2mqtt/THSensor04", transformationPattern="JSONPATH:$.humidity" ]
    Type number : linkquality "Xiaomi Temp Humi Sensor 04 LinkQuality" [ stateTopic="zigbee2mqtt/THSensor04",  transformationPattern="JSONPATH:$.linkquality" ]
    Type number : battery "Xiaomi Temp Humi Sensor 04 battery" [ stateTopic="zigbee2mqtt/THSensor04",  transformationPattern="JSONPATH:$.battery" ]
    Type number : voltage "Xiaomi Temp Humi Sensor 04 voltage" [ stateTopic="zigbee2mqtt/THSensor04",  transformationPattern="JSONPATH:$.voltage" ]
    Type string : reachable "Xiaomi THSensor04 Reachable"

}

//----------------------------------------------------------------------------------------------------
Thing mqtt:topic:pir01 "PIR 01" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Type number : illuminance "PIR 01 illuminance"      [stateTopic="zigbee2mqtt/pir01", transformationPattern="JSONPATH:$.illuminance" ]
    Type number : illuminance_lux "PIR 01 illuminance_lux"  [stateTopic="zigbee2mqtt/pir01", transformationPattern="JSONPATH:$.illuminance_lux" ]
    Type switch : occupancy "PIR 01 occupancy"          [stateTopic="zigbee2mqtt/pir01", transformationPattern="JS:truefalse2onoff.js"]
    Type number : linkquality "PIR 01 LinkQuality"   [ stateTopic="zigbee2mqtt/pir01",  transformationPattern="JSONPATH:$.linkquality" ]
    Type number : battery "PIR 01 battery"   [ stateTopic="zigbee2mqtt/pir01",  transformationPattern="JSONPATH:$.battery" ]
    Type number : voltage "PIR 01 voltage"   [ stateTopic="zigbee2mqtt/pir01",  transformationPattern="JSONPATH:$.voltage" ]
    Type string : reachable "PIR 01 Reachable"

}
Thing mqtt:topic:pir02 "PIR 02" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Type number : illuminance "PIR 02 illuminance"      [stateTopic="zigbee2mqtt/pir02", transformationPattern="JSONPATH:$.illuminance" ]
    Type number : illuminance_lux "PIR 02 illuminance_lux"  [stateTopic="zigbee2mqtt/pir02", transformationPattern="JSONPATH:$.illuminance_lux" ]
    Type switch : occupancy "PIR 02 occupancy"          [stateTopic="zigbee2mqtt/pir02", transformationPattern="JS:truefalse2onoff.js" ]
    Type number : linkquality "PIR 02 LinkQuality"   [ stateTopic="zigbee2mqtt/pir02",  transformationPattern="JSONPATH:$.linkquality" ]
    Type number : battery "PIR 02 battery"   [ stateTopic="zigbee2mqtt/pir02",  transformationPattern="JSONPATH:$.battery" ]
    Type number : voltage "PIR 02 voltage"   [ stateTopic="zigbee2mqtt/pir02",  transformationPattern="JSONPATH:$.voltage" ]
    Type string : reachable "PIR 02 Reachable"

}
//--------------------------------------------------------------------------
Thing mqtt:topic:contact01 "Contact 01" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Type string : contact "Contact 01 contact"          [stateTopic="zigbee2mqtt/contact01", transformationPattern="JSONPATH:$.contact" ]
    Type number : linkquality "Contact 01 LinkQuality"   [ stateTopic="zigbee2mqtt/contact01",  transformationPattern="JSONPATH:$.linkquality" ]
    Type number : battery "Contact 01 battery"   [ stateTopic="zigbee2mqtt/contact01",  transformationPattern="JSONPATH:$.battery" ]
    Type number : voltage "Contact 01 voltage"   [ stateTopic="zigbee2mqtt/contact01",  transformationPattern="JSONPATH:$.voltage" ]
    Type string : reachable "Contact 01 Reachable"

}
Thing mqtt:topic:contact02 "Contact 02" (mqtt:broker:MyMQTTBroker) @ "YetToBePlaced"
{
    Type string : contact "Contact 02 contact"          [stateTopic="zigbee2mqtt/contact02", transformationPattern="JSONPATH:$.contact" ]
    Type number : linkquality "Contact 02 LinkQuality"   [ stateTopic="zigbee2mqtt/contact02",  transformationPattern="JSONPATH:$.linkquality" ]
    Type number : battery "Contact 02 battery"   [ stateTopic="zigbee2mqtt/contact02",  transformationPattern="JSONPATH:$.battery" ]
    Type number : voltage "Contact 02 voltage"   [ stateTopic="zigbee2mqtt/contact02",  transformationPattern="JSONPATH:$.voltage" ]
    Type string : reachable "Contact 02 Reachable"

}