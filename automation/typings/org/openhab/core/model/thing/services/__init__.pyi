import org.eclipse.xtext
import org.eclipse.xtext.service
import typing


class ThingGrammarAccess(org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder):
    """
    Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess'
    
        Extends:
            org.eclipse.xtext.service.AbstractElementFinder$AbstractGrammarElementFinder
    
      Constructors:
        * ThingGrammarAccess(org.eclipse.xtext.service.GrammarProvider)
    
    """
    def __init__(self, grammarProvider: org.eclipse.xtext.service.GrammarProvider): ...
    def getANY_OTHERRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getBOOLEANAccess(self) -> 'ThingGrammarAccess.BOOLEANElements': ...
    def getBOOLEANRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getBaseModelItemTypeAccess(self) -> 'ThingGrammarAccess.BaseModelItemTypeElements': ...
    def getBaseModelItemTypeRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getCHANNEL_IDAccess(self) -> 'ThingGrammarAccess.CHANNEL_IDElements': ...
    def getCHANNEL_IDRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getGrammar(self) -> org.eclipse.xtext.Grammar: ...
    def getIDRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getML_COMMENTRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getModelBridgeAccess(self) -> 'ThingGrammarAccess.ModelBridgeElements': ...
    def getModelBridgeRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getModelChannelAccess(self) -> 'ThingGrammarAccess.ModelChannelElements': ...
    def getModelChannelRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getModelItemTypeAccess(self) -> 'ThingGrammarAccess.ModelItemTypeElements': ...
    def getModelItemTypeRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getModelPropertyAccess(self) -> 'ThingGrammarAccess.ModelPropertyElements': ...
    def getModelPropertyContainerAccess(self) -> 'ThingGrammarAccess.ModelPropertyContainerElements': ...
    def getModelPropertyContainerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getModelPropertyRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getModelThingAccess(self) -> 'ThingGrammarAccess.ModelThingElements': ...
    def getModelThingRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getNUMBERAccess(self) -> 'ThingGrammarAccess.NUMBERElements': ...
    def getNUMBERRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getSL_COMMENTRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getSTRINGRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getThingModelAccess(self) -> 'ThingGrammarAccess.ThingModelElements': ...
    def getThingModelRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getUIDAccess(self) -> 'ThingGrammarAccess.UIDElements': ...
    def getUIDRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getUID_SEGMENTAccess(self) -> 'ThingGrammarAccess.UID_SEGMENTElements': ...
    def getUID_SEGMENTRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValueTypeAccess(self) -> 'ThingGrammarAccess.ValueTypeElements': ...
    def getValueTypeRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getWSRule(self) -> org.eclipse.xtext.TerminalRule: ...
    class BOOLEANElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$BOOLEANElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * BOOLEANElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        def getFalseKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getTrueKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
    class BaseModelItemTypeElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$BaseModelItemTypeElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * BaseModelItemTypeElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        def getCallKeyword_10(self) -> org.eclipse.xtext.Keyword: ...
        def getColorKeyword_7(self) -> org.eclipse.xtext.Keyword: ...
        def getContactKeyword_5(self) -> org.eclipse.xtext.Keyword: ...
        def getDateTimeKeyword_6(self) -> org.eclipse.xtext.Keyword: ...
        def getDimmerKeyword_4(self) -> org.eclipse.xtext.Keyword: ...
        def getImageKeyword_11(self) -> org.eclipse.xtext.Keyword: ...
        def getLocationKeyword_9(self) -> org.eclipse.xtext.Keyword: ...
        def getNumberKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        def getPlayerKeyword_8(self) -> org.eclipse.xtext.Keyword: ...
        def getRollershutterKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getStringKeyword_3(self) -> org.eclipse.xtext.Keyword: ...
        def getSwitchKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
    class CHANNEL_IDElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$CHANNEL_IDElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * CHANNEL_IDElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_1(self) -> org.eclipse.xtext.Group: ...
        def getNumberSignKeyword_1_0(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getUID_SEGMENTParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getUID_SEGMENTParserRuleCall_1_1(self) -> org.eclipse.xtext.RuleCall: ...
    class ModelBridgeElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$ModelBridgeElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ModelBridgeElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getAlternatives_2(self) -> org.eclipse.xtext.Alternatives: ...
        def getBridgeAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getBridgeBridgeKeyword_1_0(self) -> org.eclipse.xtext.Keyword: ...
        def getChannelsAssignment_6_4(self) -> org.eclipse.xtext.Assignment: ...
        def getChannelsKeyword_6_3(self) -> org.eclipse.xtext.Keyword: ...
        def getChannelsModelChannelParserRuleCall_6_4_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getCommaKeyword_5_2_0(self) -> org.eclipse.xtext.Keyword: ...
        def getCommercialAtKeyword_4_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_2_1(self) -> org.eclipse.xtext.Group: ...
        def getGroup_4(self) -> org.eclipse.xtext.Group: ...
        def getGroup_5(self) -> org.eclipse.xtext.Group: ...
        def getGroup_5_2(self) -> org.eclipse.xtext.Group: ...
        def getGroup_6(self) -> org.eclipse.xtext.Group: ...
        def getIdAssignment_2_0(self) -> org.eclipse.xtext.Assignment: ...
        def getIdUIDParserRuleCall_2_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getLabelAssignment_3(self) -> org.eclipse.xtext.Assignment: ...
        def getLabelSTRINGTerminalRuleCall_3_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getLeftCurlyBracketKeyword_6_0(self) -> org.eclipse.xtext.Keyword: ...
        def getLeftSquareBracketKeyword_5_0(self) -> org.eclipse.xtext.Keyword: ...
        def getLocationAssignment_4_1(self) -> org.eclipse.xtext.Assignment: ...
        def getLocationSTRINGTerminalRuleCall_4_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getModelBridgeAction_0(self) -> org.eclipse.xtext.Action: ...
        def getPropertiesAssignment_5_1(self) -> org.eclipse.xtext.Assignment: ...
        def getPropertiesAssignment_5_2_1(self) -> org.eclipse.xtext.Assignment: ...
        def getPropertiesModelPropertyParserRuleCall_5_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getPropertiesModelPropertyParserRuleCall_5_2_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getRightCurlyBracketKeyword_6_5(self) -> org.eclipse.xtext.Keyword: ...
        def getRightSquareBracketKeyword_5_3(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getThingIdAssignment_2_1_1(self) -> org.eclipse.xtext.Assignment: ...
        def getThingIdUID_SEGMENTParserRuleCall_2_1_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getThingTypeIdAssignment_2_1_0(self) -> org.eclipse.xtext.Assignment: ...
        def getThingTypeIdUID_SEGMENTParserRuleCall_2_1_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getThingsAlternatives_6_2_0(self) -> org.eclipse.xtext.Alternatives: ...
        def getThingsAssignment_6_2(self) -> org.eclipse.xtext.Assignment: ...
        def getThingsKeyword_6_1(self) -> org.eclipse.xtext.Keyword: ...
        def getThingsModelBridgeParserRuleCall_6_2_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getThingsModelThingParserRuleCall_6_2_0_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ModelChannelElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$ModelChannelElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ModelChannelElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getAlternatives_0(self) -> org.eclipse.xtext.Alternatives: ...
        def getChannelKindAlternatives_0_0_0_0(self) -> org.eclipse.xtext.Alternatives: ...
        def getChannelKindAssignment_0_0_0(self) -> org.eclipse.xtext.Assignment: ...
        def getChannelKindStateKeyword_0_0_0_0_0(self) -> org.eclipse.xtext.Keyword: ...
        def getChannelKindTriggerKeyword_0_0_0_0_1(self) -> org.eclipse.xtext.Keyword: ...
        def getChannelTypeAssignment_0_1_1(self) -> org.eclipse.xtext.Assignment: ...
        def getChannelTypeUID_SEGMENTParserRuleCall_0_1_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getColonKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        def getCommaKeyword_4_2_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_0_0(self) -> org.eclipse.xtext.Group: ...
        def getGroup_0_1(self) -> org.eclipse.xtext.Group: ...
        def getGroup_4(self) -> org.eclipse.xtext.Group: ...
        def getGroup_4_2(self) -> org.eclipse.xtext.Group: ...
        def getIdAssignment_2(self) -> org.eclipse.xtext.Assignment: ...
        def getIdCHANNEL_IDParserRuleCall_2_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getLabelAssignment_3(self) -> org.eclipse.xtext.Assignment: ...
        def getLabelSTRINGTerminalRuleCall_3_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getLeftSquareBracketKeyword_4_0(self) -> org.eclipse.xtext.Keyword: ...
        def getPropertiesAssignment_4_1(self) -> org.eclipse.xtext.Assignment: ...
        def getPropertiesAssignment_4_2_1(self) -> org.eclipse.xtext.Assignment: ...
        def getPropertiesModelPropertyParserRuleCall_4_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getPropertiesModelPropertyParserRuleCall_4_2_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getRightSquareBracketKeyword_4_3(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getTypeAssignment_0_0_1(self) -> org.eclipse.xtext.Assignment: ...
        def getTypeKeyword_0_1_0(self) -> org.eclipse.xtext.Keyword: ...
        def getTypeModelItemTypeParserRuleCall_0_0_1_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ModelItemTypeElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$ModelItemTypeElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ModelItemTypeElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        def getBaseModelItemTypeParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroup_1(self) -> org.eclipse.xtext.Group: ...
        def getIDTerminalRuleCall_1_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getNumberKeyword_1_0(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class ModelPropertyContainerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$ModelPropertyContainerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ModelPropertyContainerElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        def getModelBridgeParserRuleCall_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getModelChannelParserRuleCall_2(self) -> org.eclipse.xtext.RuleCall: ...
        def getModelThingParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class ModelPropertyElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$ModelPropertyElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ModelPropertyElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getCommaKeyword_3_0(self) -> org.eclipse.xtext.Keyword: ...
        def getEqualsSignKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_3(self) -> org.eclipse.xtext.Group: ...
        def getKeyAssignment_0(self) -> org.eclipse.xtext.Assignment: ...
        def getKeyIDTerminalRuleCall_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValueAssignment_2(self) -> org.eclipse.xtext.Assignment: ...
        def getValueAssignment_3_1(self) -> org.eclipse.xtext.Assignment: ...
        def getValueValueTypeParserRuleCall_2_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getValueValueTypeParserRuleCall_3_1_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ModelThingElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$ModelThingElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ModelThingElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getAlternatives_1(self) -> org.eclipse.xtext.Alternatives: ...
        def getBridgeUIDAssignment_3_1(self) -> org.eclipse.xtext.Assignment: ...
        def getBridgeUIDUIDParserRuleCall_3_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getChannelsAssignment_6_2(self) -> org.eclipse.xtext.Assignment: ...
        def getChannelsKeyword_6_1(self) -> org.eclipse.xtext.Keyword: ...
        def getChannelsModelChannelParserRuleCall_6_2_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getCommaKeyword_5_2_0(self) -> org.eclipse.xtext.Keyword: ...
        def getCommercialAtKeyword_4_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_1_1(self) -> org.eclipse.xtext.Group: ...
        def getGroup_3(self) -> org.eclipse.xtext.Group: ...
        def getGroup_4(self) -> org.eclipse.xtext.Group: ...
        def getGroup_5(self) -> org.eclipse.xtext.Group: ...
        def getGroup_5_2(self) -> org.eclipse.xtext.Group: ...
        def getGroup_6(self) -> org.eclipse.xtext.Group: ...
        def getIdAssignment_1_0(self) -> org.eclipse.xtext.Assignment: ...
        def getIdUIDParserRuleCall_1_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getLabelAssignment_2(self) -> org.eclipse.xtext.Assignment: ...
        def getLabelSTRINGTerminalRuleCall_2_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getLeftCurlyBracketKeyword_6_0(self) -> org.eclipse.xtext.Keyword: ...
        def getLeftParenthesisKeyword_3_0(self) -> org.eclipse.xtext.Keyword: ...
        def getLeftSquareBracketKeyword_5_0(self) -> org.eclipse.xtext.Keyword: ...
        def getLocationAssignment_4_1(self) -> org.eclipse.xtext.Assignment: ...
        def getLocationSTRINGTerminalRuleCall_4_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getPropertiesAssignment_5_1(self) -> org.eclipse.xtext.Assignment: ...
        def getPropertiesAssignment_5_2_1(self) -> org.eclipse.xtext.Assignment: ...
        def getPropertiesModelPropertyParserRuleCall_5_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getPropertiesModelPropertyParserRuleCall_5_2_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getRightCurlyBracketKeyword_6_3(self) -> org.eclipse.xtext.Keyword: ...
        def getRightParenthesisKeyword_3_2(self) -> org.eclipse.xtext.Keyword: ...
        def getRightSquareBracketKeyword_5_3(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getThingIdAssignment_1_1_1(self) -> org.eclipse.xtext.Assignment: ...
        def getThingIdUID_SEGMENTParserRuleCall_1_1_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getThingKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getThingTypeIdAssignment_1_1_0(self) -> org.eclipse.xtext.Assignment: ...
        def getThingTypeIdUID_SEGMENTParserRuleCall_1_1_0_0(self) -> org.eclipse.xtext.RuleCall: ...
    class NUMBERElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$NUMBERElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * NUMBERElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getFullStopKeyword_2_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_2(self) -> org.eclipse.xtext.Group: ...
        def getHyphenMinusKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getIDTerminalRuleCall_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getIDTerminalRuleCall_2_1(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class ThingModelElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$ThingModelElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ThingModelElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getThingsAlternatives_0(self) -> org.eclipse.xtext.Alternatives: ...
        def getThingsAssignment(self) -> org.eclipse.xtext.Assignment: ...
        def getThingsModelBridgeParserRuleCall_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getThingsModelThingParserRuleCall_0_0(self) -> org.eclipse.xtext.RuleCall: ...
    class UIDElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$UIDElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * UIDElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getColonKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        def getColonKeyword_3(self) -> org.eclipse.xtext.Keyword: ...
        def getColonKeyword_5_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_5(self) -> org.eclipse.xtext.Group: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getUID_SEGMENTParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getUID_SEGMENTParserRuleCall_2(self) -> org.eclipse.xtext.RuleCall: ...
        def getUID_SEGMENTParserRuleCall_4(self) -> org.eclipse.xtext.RuleCall: ...
        def getUID_SEGMENTParserRuleCall_5_1(self) -> org.eclipse.xtext.RuleCall: ...
    class UID_SEGMENTElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$UID_SEGMENTElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * UID_SEGMENTElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getIDTerminalRuleCall(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class ValueTypeElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.thing.services.ThingGrammarAccess$ValueTypeElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValueTypeElements(org.openhab.core.model.thing.services.ThingGrammarAccess)
        
        """
        def __init__(self, thingGrammarAccess: 'ThingGrammarAccess'): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        def getBOOLEANParserRuleCall_2(self) -> org.eclipse.xtext.RuleCall: ...
        def getNUMBERParserRuleCall_1(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getSTRINGTerminalRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
