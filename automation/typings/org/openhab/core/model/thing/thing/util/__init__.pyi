import org.eclipse.emf.common.notify
import org.eclipse.emf.common.notify.impl
import org.eclipse.emf.ecore
import org.eclipse.emf.ecore.util
import org.openhab.core.model.thing.thing
import typing


class ThingAdapterFactory(org.eclipse.emf.common.notify.impl.AdapterFactoryImpl):
    """
    Java class 'org.openhab.core.model.thing.thing.util.ThingAdapterFactory'
    
        Extends:
            org.eclipse.emf.common.notify.impl.AdapterFactoryImpl
    
      Constructors:
        * ThingAdapterFactory()
    
    """
    def __init__(self): ...
    def createAdapter(self, notifier: org.eclipse.emf.common.notify.Notifier) -> org.eclipse.emf.common.notify.Adapter: ...
    def createEObjectAdapter(self) -> org.eclipse.emf.common.notify.Adapter: ...
    def createModelBridgeAdapter(self) -> org.eclipse.emf.common.notify.Adapter: ...
    def createModelChannelAdapter(self) -> org.eclipse.emf.common.notify.Adapter: ...
    def createModelPropertyAdapter(self) -> org.eclipse.emf.common.notify.Adapter: ...
    def createModelPropertyContainerAdapter(self) -> org.eclipse.emf.common.notify.Adapter: ...
    def createModelThingAdapter(self) -> org.eclipse.emf.common.notify.Adapter: ...
    def createThingModelAdapter(self) -> org.eclipse.emf.common.notify.Adapter: ...
    def isFactoryForType(self, object: typing.Any) -> bool: ...

_ThingSwitch__T = typing.TypeVar('_ThingSwitch__T')  # <T>
class ThingSwitch(org.eclipse.emf.ecore.util.Switch[_ThingSwitch__T], typing.Generic[_ThingSwitch__T]):
    """
    Java class 'org.openhab.core.model.thing.thing.util.ThingSwitch'
    
        Extends:
            org.eclipse.emf.ecore.util.Switch
    
      Constructors:
        * ThingSwitch()
    
    """
    def __init__(self): ...
    def caseModelBridge(self, modelBridge: org.openhab.core.model.thing.thing.ModelBridge) -> _ThingSwitch__T: ...
    def caseModelChannel(self, modelChannel: org.openhab.core.model.thing.thing.ModelChannel) -> _ThingSwitch__T: ...
    def caseModelProperty(self, modelProperty: org.openhab.core.model.thing.thing.ModelProperty) -> _ThingSwitch__T: ...
    def caseModelPropertyContainer(self, modelPropertyContainer: org.openhab.core.model.thing.thing.ModelPropertyContainer) -> _ThingSwitch__T: ...
    def caseModelThing(self, modelThing: org.openhab.core.model.thing.thing.ModelThing) -> _ThingSwitch__T: ...
    def caseThingModel(self, thingModel: org.openhab.core.model.thing.thing.ThingModel) -> _ThingSwitch__T: ...
    def defaultCase(self, eObject: org.eclipse.emf.ecore.EObject) -> _ThingSwitch__T: ...
