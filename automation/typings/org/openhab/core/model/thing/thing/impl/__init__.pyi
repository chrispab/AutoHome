import java.lang
import org.eclipse.emf.common.notify
import org.eclipse.emf.common.util
import org.eclipse.emf.ecore
import org.eclipse.emf.ecore.impl
import org.eclipse.emf.ecore.resource.impl
import org.openhab.core.model.thing.thing
import typing


class ModelPropertyContainerImpl(org.eclipse.emf.ecore.impl.MinimalEObjectImpl.Container, org.openhab.core.model.thing.thing.ModelPropertyContainer):
    """
    Java class 'org.openhab.core.model.thing.thing.impl.ModelPropertyContainerImpl'
    
        Extends:
            org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container
    
        Interfaces:
            org.openhab.core.model.thing.thing.ModelPropertyContainer
    
    """
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, int: int, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eInverseRemove(self, internalEObject: org.eclipse.emf.ecore.InternalEObject, int2: int, class_: typing.Type[typing.Any], notificationChain: org.eclipse.emf.common.notify.NotificationChain) -> org.eclipse.emf.common.notify.NotificationChain: ...
    @typing.overload
    def eInverseRemove(self, internalEObject: org.eclipse.emf.ecore.InternalEObject, int2: int, notificationChain: org.eclipse.emf.common.notify.NotificationChain) -> org.eclipse.emf.common.notify.NotificationChain: ...
    @typing.overload
    def eIsSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> bool: ...
    @typing.overload
    def eIsSet(self, int: int) -> bool: ...
    @typing.overload
    def eSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, object: typing.Any) -> None: ...
    @typing.overload
    def eSet(self, int: int, object: typing.Any) -> None: ...
    @typing.overload
    def eUnset(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> None: ...
    @typing.overload
    def eUnset(self, int: int) -> None: ...
    def getId(self) -> java.lang.String: ...
    def getLabel(self) -> java.lang.String: ...
    def getProperties(self) -> org.eclipse.emf.common.util.EList[org.openhab.core.model.thing.thing.ModelProperty]: ...
    def setId(self, string: java.lang.String) -> None: ...
    def setLabel(self, string: java.lang.String) -> None: ...
    def toString(self) -> java.lang.String: ...

class ModelPropertyImpl(org.eclipse.emf.ecore.impl.MinimalEObjectImpl.Container, org.openhab.core.model.thing.thing.ModelProperty):
    """
    Java class 'org.openhab.core.model.thing.thing.impl.ModelPropertyImpl'
    
        Extends:
            org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container
    
        Interfaces:
            org.openhab.core.model.thing.thing.ModelProperty
    
    """
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, int: int, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eIsSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> bool: ...
    @typing.overload
    def eIsSet(self, int: int) -> bool: ...
    @typing.overload
    def eSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, object: typing.Any) -> None: ...
    @typing.overload
    def eSet(self, int: int, object: typing.Any) -> None: ...
    @typing.overload
    def eUnset(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> None: ...
    @typing.overload
    def eUnset(self, int: int) -> None: ...
    def getKey(self) -> java.lang.String: ...
    def getValue(self) -> org.eclipse.emf.common.util.EList[typing.Any]: ...
    def setKey(self, string: java.lang.String) -> None: ...
    def toString(self) -> java.lang.String: ...

class ThingFactoryImpl(org.eclipse.emf.ecore.impl.EFactoryImpl, org.openhab.core.model.thing.thing.ThingFactory):
    """
    Java class 'org.openhab.core.model.thing.thing.impl.ThingFactoryImpl'
    
        Extends:
            org.eclipse.emf.ecore.impl.EFactoryImpl
    
        Interfaces:
            org.openhab.core.model.thing.thing.ThingFactory
    
      Constructors:
        * ThingFactoryImpl()
    
    """
    def __init__(self): ...
    @typing.overload
    def create(self, eClass: org.eclipse.emf.ecore.EClass) -> org.eclipse.emf.ecore.EObject: ...
    @typing.overload
    def create(self, eDataType: org.eclipse.emf.ecore.EDataType) -> org.eclipse.emf.ecore.resource.impl.BinaryResourceImpl.DataConverter[typing.Any]: ...
    def createModelBridge(self) -> org.openhab.core.model.thing.thing.ModelBridge: ...
    def createModelChannel(self) -> org.openhab.core.model.thing.thing.ModelChannel: ...
    def createModelProperty(self) -> org.openhab.core.model.thing.thing.ModelProperty: ...
    def createModelPropertyContainer(self) -> org.openhab.core.model.thing.thing.ModelPropertyContainer: ...
    def createModelThing(self) -> org.openhab.core.model.thing.thing.ModelThing: ...
    def createThingModel(self) -> org.openhab.core.model.thing.thing.ThingModel: ...
    @classmethod
    def getPackage(cls) -> org.openhab.core.model.thing.thing.ThingPackage: ...
    def getThingPackage(self) -> org.openhab.core.model.thing.thing.ThingPackage: ...
    @classmethod
    def init(cls) -> org.openhab.core.model.thing.thing.ThingFactory: ...

class ThingModelImpl(org.eclipse.emf.ecore.impl.MinimalEObjectImpl.Container, org.openhab.core.model.thing.thing.ThingModel):
    """
    Java class 'org.openhab.core.model.thing.thing.impl.ThingModelImpl'
    
        Extends:
            org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container
    
        Interfaces:
            org.openhab.core.model.thing.thing.ThingModel
    
    """
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, int: int, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eInverseRemove(self, internalEObject: org.eclipse.emf.ecore.InternalEObject, int2: int, class_: typing.Type[typing.Any], notificationChain: org.eclipse.emf.common.notify.NotificationChain) -> org.eclipse.emf.common.notify.NotificationChain: ...
    @typing.overload
    def eInverseRemove(self, internalEObject: org.eclipse.emf.ecore.InternalEObject, int2: int, notificationChain: org.eclipse.emf.common.notify.NotificationChain) -> org.eclipse.emf.common.notify.NotificationChain: ...
    @typing.overload
    def eIsSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> bool: ...
    @typing.overload
    def eIsSet(self, int: int) -> bool: ...
    @typing.overload
    def eSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, object: typing.Any) -> None: ...
    @typing.overload
    def eSet(self, int: int, object: typing.Any) -> None: ...
    @typing.overload
    def eUnset(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> None: ...
    @typing.overload
    def eUnset(self, int: int) -> None: ...
    def getThings(self) -> org.eclipse.emf.common.util.EList[org.openhab.core.model.thing.thing.ModelThing]: ...

class ThingPackageImpl(org.eclipse.emf.ecore.impl.EPackageImpl, org.openhab.core.model.thing.thing.ThingPackage):
    """
    Java class 'org.openhab.core.model.thing.thing.impl.ThingPackageImpl'
    
        Extends:
            org.eclipse.emf.ecore.impl.EPackageImpl
    
        Interfaces:
            org.openhab.core.model.thing.thing.ThingPackage
    
    """
    def createPackageContents(self) -> None: ...
    def getModelBridge(self) -> org.eclipse.emf.ecore.EClass: ...
    def getModelBridge_Bridge(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getModelBridge_Things(self) -> org.eclipse.emf.ecore.EReference: ...
    def getModelChannel(self) -> org.eclipse.emf.ecore.EClass: ...
    def getModelChannel_ChannelKind(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getModelChannel_ChannelType(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getModelChannel_Type(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getModelProperty(self) -> org.eclipse.emf.ecore.EClass: ...
    def getModelPropertyContainer(self) -> org.eclipse.emf.ecore.EClass: ...
    def getModelPropertyContainer_Id(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getModelPropertyContainer_Label(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getModelPropertyContainer_Properties(self) -> org.eclipse.emf.ecore.EReference: ...
    def getModelProperty_Key(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getModelProperty_Value(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getModelThing(self) -> org.eclipse.emf.ecore.EClass: ...
    def getModelThing_BridgeUID(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getModelThing_Channels(self) -> org.eclipse.emf.ecore.EReference: ...
    def getModelThing_Location(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getModelThing_ThingId(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getModelThing_ThingTypeId(self) -> org.eclipse.emf.ecore.EAttribute: ...
    def getThingFactory(self) -> org.openhab.core.model.thing.thing.ThingFactory: ...
    def getThingModel(self) -> org.eclipse.emf.ecore.EClass: ...
    def getThingModel_Things(self) -> org.eclipse.emf.ecore.EReference: ...
    @classmethod
    def init(cls) -> org.openhab.core.model.thing.thing.ThingPackage: ...
    def initializePackageContents(self) -> None: ...

class ModelChannelImpl(ModelPropertyContainerImpl, org.openhab.core.model.thing.thing.ModelChannel):
    """
    Java class 'org.openhab.core.model.thing.thing.impl.ModelChannelImpl'
    
        Extends:
            org.openhab.core.model.thing.thing.impl.ModelPropertyContainerImpl
    
        Interfaces:
            org.openhab.core.model.thing.thing.ModelChannel
    
    """
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, int: int, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eIsSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> bool: ...
    @typing.overload
    def eIsSet(self, int: int) -> bool: ...
    @typing.overload
    def eSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, object: typing.Any) -> None: ...
    @typing.overload
    def eSet(self, int: int, object: typing.Any) -> None: ...
    @typing.overload
    def eUnset(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> None: ...
    @typing.overload
    def eUnset(self, int: int) -> None: ...
    def getChannelKind(self) -> java.lang.String: ...
    def getChannelType(self) -> java.lang.String: ...
    def getType(self) -> java.lang.String: ...
    def setChannelKind(self, string: java.lang.String) -> None: ...
    def setChannelType(self, string: java.lang.String) -> None: ...
    def setType(self, string: java.lang.String) -> None: ...
    def toString(self) -> java.lang.String: ...

class ModelThingImpl(ModelPropertyContainerImpl, org.openhab.core.model.thing.thing.ModelThing):
    """
    Java class 'org.openhab.core.model.thing.thing.impl.ModelThingImpl'
    
        Extends:
            org.openhab.core.model.thing.thing.impl.ModelPropertyContainerImpl
    
        Interfaces:
            org.openhab.core.model.thing.thing.ModelThing
    
    """
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, int: int, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eInverseRemove(self, internalEObject: org.eclipse.emf.ecore.InternalEObject, int2: int, class_: typing.Type[typing.Any], notificationChain: org.eclipse.emf.common.notify.NotificationChain) -> org.eclipse.emf.common.notify.NotificationChain: ...
    @typing.overload
    def eInverseRemove(self, internalEObject: org.eclipse.emf.ecore.InternalEObject, int2: int, notificationChain: org.eclipse.emf.common.notify.NotificationChain) -> org.eclipse.emf.common.notify.NotificationChain: ...
    @typing.overload
    def eIsSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> bool: ...
    @typing.overload
    def eIsSet(self, int: int) -> bool: ...
    @typing.overload
    def eSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, object: typing.Any) -> None: ...
    @typing.overload
    def eSet(self, int: int, object: typing.Any) -> None: ...
    @typing.overload
    def eUnset(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> None: ...
    @typing.overload
    def eUnset(self, int: int) -> None: ...
    def getBridgeUID(self) -> java.lang.String: ...
    def getChannels(self) -> org.eclipse.emf.common.util.EList[org.openhab.core.model.thing.thing.ModelChannel]: ...
    def getLocation(self) -> java.lang.String: ...
    def getThingId(self) -> java.lang.String: ...
    def getThingTypeId(self) -> java.lang.String: ...
    def setBridgeUID(self, string: java.lang.String) -> None: ...
    def setLocation(self, string: java.lang.String) -> None: ...
    def setThingId(self, string: java.lang.String) -> None: ...
    def setThingTypeId(self, string: java.lang.String) -> None: ...
    def toString(self) -> java.lang.String: ...

class ModelBridgeImpl(ModelThingImpl, org.openhab.core.model.thing.thing.ModelBridge):
    """
    Java class 'org.openhab.core.model.thing.thing.impl.ModelBridgeImpl'
    
        Extends:
            org.openhab.core.model.thing.thing.impl.ModelThingImpl
    
        Interfaces:
            org.openhab.core.model.thing.thing.ModelBridge
    
    """
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eGet(self, int: int, boolean: bool, boolean2: bool) -> typing.Any: ...
    @typing.overload
    def eInverseRemove(self, internalEObject: org.eclipse.emf.ecore.InternalEObject, int2: int, class_: typing.Type[typing.Any], notificationChain: org.eclipse.emf.common.notify.NotificationChain) -> org.eclipse.emf.common.notify.NotificationChain: ...
    @typing.overload
    def eInverseRemove(self, internalEObject: org.eclipse.emf.ecore.InternalEObject, int2: int, notificationChain: org.eclipse.emf.common.notify.NotificationChain) -> org.eclipse.emf.common.notify.NotificationChain: ...
    @typing.overload
    def eIsSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> bool: ...
    @typing.overload
    def eIsSet(self, int: int) -> bool: ...
    @typing.overload
    def eSet(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature, object: typing.Any) -> None: ...
    @typing.overload
    def eSet(self, int: int, object: typing.Any) -> None: ...
    @typing.overload
    def eUnset(self, eStructuralFeature: org.eclipse.emf.ecore.EStructuralFeature) -> None: ...
    @typing.overload
    def eUnset(self, int: int) -> None: ...
    def getThings(self) -> org.eclipse.emf.common.util.EList[org.openhab.core.model.thing.thing.ModelThing]: ...
    def isBridge(self) -> bool: ...
    def setBridge(self, boolean: bool) -> None: ...
    def toString(self) -> java.lang.String: ...
