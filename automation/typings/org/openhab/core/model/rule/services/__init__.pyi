import org.eclipse.xtext
import org.eclipse.xtext.service
import org.eclipse.xtext.xbase.services
import org.openhab.core.model.script.services
import typing


class RulesGrammarAccess(org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder):
    """
    Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess'
    
        Extends:
            org.eclipse.xtext.service.AbstractElementFinder$AbstractGrammarElementFinder
    
      Constructors:
        * RulesGrammarAccess(org.eclipse.xtext.service.GrammarProvider, org.openhab.core.model.script.services.ScriptGrammarAccess, org.eclipse.xtext.xbase.services.XbaseGrammarAccess, org.eclipse.xtext.xbase.services.XtypeGrammarAccess)
    
    """
    def __init__(self, grammarProvider: org.eclipse.xtext.service.GrammarProvider, gaScript: org.openhab.core.model.script.services.ScriptGrammarAccess, gaXbase: org.eclipse.xtext.xbase.services.XbaseGrammarAccess, gaXtype: org.eclipse.xtext.xbase.services.XtypeGrammarAccess): ...
    def getANY_OTHERRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getAbstractUnitAccess(self) -> org.openhab.core.model.script.services.ScriptGrammarAccess.AbstractUnitElements: ...
    def getAbstractUnitRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getArrayBracketsAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.ArrayBracketsElements: ...
    def getArrayBracketsRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getCOMMON_UNIT_SYMBOLSAccess(self) -> org.openhab.core.model.script.services.ScriptGrammarAccess.COMMON_UNIT_SYMBOLSElements: ...
    def getCOMMON_UNIT_SYMBOLSRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getChangedEventTriggerAccess(self) -> 'RulesGrammarAccess.ChangedEventTriggerElements': ...
    def getChangedEventTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getCommandEventTriggerAccess(self) -> 'RulesGrammarAccess.CommandEventTriggerElements': ...
    def getCommandEventTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getDECIMALRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getEventEmittedTriggerAccess(self) -> 'RulesGrammarAccess.EventEmittedTriggerElements': ...
    def getEventEmittedTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getEventTriggerAccess(self) -> 'RulesGrammarAccess.EventTriggerElements': ...
    def getEventTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getFeatureCallIDAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.FeatureCallIDElements: ...
    def getFeatureCallIDRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getFullJvmFormalParameterAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.FullJvmFormalParameterElements: ...
    def getFullJvmFormalParameterRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getGrammar(self) -> org.eclipse.xtext.Grammar: ...
    def getGroupMemberChangedEventTriggerAccess(self) -> 'RulesGrammarAccess.GroupMemberChangedEventTriggerElements': ...
    def getGroupMemberChangedEventTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getGroupMemberCommandEventTriggerAccess(self) -> 'RulesGrammarAccess.GroupMemberCommandEventTriggerElements': ...
    def getGroupMemberCommandEventTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getGroupMemberUpdateEventTriggerAccess(self) -> 'RulesGrammarAccess.GroupMemberUpdateEventTriggerElements': ...
    def getGroupMemberUpdateEventTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getHEXRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getIDRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getIDUnitAccess(self) -> org.openhab.core.model.script.services.ScriptGrammarAccess.IDUnitElements: ...
    def getIDUnitRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getINTRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getIdOrSuperAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.IdOrSuperElements: ...
    def getIdOrSuperRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getItemNameAccess(self) -> 'RulesGrammarAccess.ItemNameElements': ...
    def getItemNameRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getJvmArgumentTypeReferenceAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.JvmArgumentTypeReferenceElements: ...
    def getJvmArgumentTypeReferenceRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getJvmFormalParameterAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.JvmFormalParameterElements: ...
    def getJvmFormalParameterRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getJvmLowerBoundAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.JvmLowerBoundElements: ...
    def getJvmLowerBoundAndedAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.JvmLowerBoundAndedElements: ...
    def getJvmLowerBoundAndedRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getJvmLowerBoundRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getJvmParameterizedTypeReferenceAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.JvmParameterizedTypeReferenceElements: ...
    def getJvmParameterizedTypeReferenceRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getJvmTypeParameterAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.JvmTypeParameterElements: ...
    def getJvmTypeParameterRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getJvmTypeReferenceAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.JvmTypeReferenceElements: ...
    def getJvmTypeReferenceRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getJvmUpperBoundAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.JvmUpperBoundElements: ...
    def getJvmUpperBoundAndedAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.JvmUpperBoundAndedElements: ...
    def getJvmUpperBoundAndedRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getJvmUpperBoundRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getJvmWildcardTypeReferenceAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.JvmWildcardTypeReferenceElements: ...
    def getJvmWildcardTypeReferenceRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getML_COMMENTRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getNumberAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.NumberElements: ...
    def getNumberRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getOpAddAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.OpAddElements: ...
    def getOpAddRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getOpAndAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.OpAndElements: ...
    def getOpAndRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getOpCompareAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.OpCompareElements: ...
    def getOpCompareRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getOpEqualityAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.OpEqualityElements: ...
    def getOpEqualityRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getOpMultiAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.OpMultiElements: ...
    def getOpMultiAssignAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.OpMultiAssignElements: ...
    def getOpMultiAssignRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getOpMultiRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getOpOrAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.OpOrElements: ...
    def getOpOrRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getOpOtherAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.OpOtherElements: ...
    def getOpOtherRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getOpPostfixAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.OpPostfixElements: ...
    def getOpPostfixRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getOpSingleAssignAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.OpSingleAssignElements: ...
    def getOpSingleAssignRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getOpUnaryAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.OpUnaryElements: ...
    def getOpUnaryRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getQualifiedNameAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.QualifiedNameElements: ...
    def getQualifiedNameInStaticImportAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.QualifiedNameInStaticImportElements: ...
    def getQualifiedNameInStaticImportRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getQualifiedNameRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getQualifiedNameWithWildcardAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.QualifiedNameWithWildcardElements: ...
    def getQualifiedNameWithWildcardRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getQuantityLiteralAccess(self) -> org.openhab.core.model.script.services.ScriptGrammarAccess.QuantityLiteralElements: ...
    def getQuantityLiteralRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getRuleAccess(self) -> 'RulesGrammarAccess.RuleElements': ...
    def getRuleModelAccess(self) -> 'RulesGrammarAccess.RuleModelElements': ...
    def getRuleModelRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getRuleRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getSL_COMMENTRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getSTRINGRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getScriptAccess(self) -> org.openhab.core.model.script.services.ScriptGrammarAccess.ScriptElements: ...
    def getScriptGrammarAccess(self) -> org.openhab.core.model.script.services.ScriptGrammarAccess: ...
    def getScriptRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getSpecificUnitAccess(self) -> org.openhab.core.model.script.services.ScriptGrammarAccess.SpecificUnitElements: ...
    def getSpecificUnitRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getStaticQualifierAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.StaticQualifierElements: ...
    def getStaticQualifierRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getStringUnitAccess(self) -> org.openhab.core.model.script.services.ScriptGrammarAccess.StringUnitElements: ...
    def getStringUnitRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getSystemOnShutdownTriggerAccess(self) -> 'RulesGrammarAccess.SystemOnShutdownTriggerElements': ...
    def getSystemOnShutdownTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getSystemOnStartupTriggerAccess(self) -> 'RulesGrammarAccess.SystemOnStartupTriggerElements': ...
    def getSystemOnStartupTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getSystemTriggerAccess(self) -> 'RulesGrammarAccess.SystemTriggerElements': ...
    def getSystemTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getThingStateChangedEventTriggerAccess(self) -> 'RulesGrammarAccess.ThingStateChangedEventTriggerElements': ...
    def getThingStateChangedEventTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getThingStateUpdateEventTriggerAccess(self) -> 'RulesGrammarAccess.ThingStateUpdateEventTriggerElements': ...
    def getThingStateUpdateEventTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getThingValidStateAccess(self) -> 'RulesGrammarAccess.ThingValidStateElements': ...
    def getThingValidStateRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getTimerTriggerAccess(self) -> 'RulesGrammarAccess.TimerTriggerElements': ...
    def getTimerTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getUpdateEventTriggerAccess(self) -> 'RulesGrammarAccess.UpdateEventTriggerElements': ...
    def getUpdateEventTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidCommandAccess(self) -> 'RulesGrammarAccess.ValidCommandElements': ...
    def getValidCommandIdAccess(self) -> 'RulesGrammarAccess.ValidCommandIdElements': ...
    def getValidCommandIdRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidCommandNumberAccess(self) -> 'RulesGrammarAccess.ValidCommandNumberElements': ...
    def getValidCommandNumberRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidCommandRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidCommandStringAccess(self) -> 'RulesGrammarAccess.ValidCommandStringElements': ...
    def getValidCommandStringRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidIDAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.ValidIDElements: ...
    def getValidIDRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidStateAccess(self) -> 'RulesGrammarAccess.ValidStateElements': ...
    def getValidStateIdAccess(self) -> 'RulesGrammarAccess.ValidStateIdElements': ...
    def getValidStateIdRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidStateNumberAccess(self) -> 'RulesGrammarAccess.ValidStateNumberElements': ...
    def getValidStateNumberRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidStateRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidStateStringAccess(self) -> 'RulesGrammarAccess.ValidStateStringElements': ...
    def getValidStateStringRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidTriggerAccess(self) -> 'RulesGrammarAccess.ValidTriggerElements': ...
    def getValidTriggerIdAccess(self) -> 'RulesGrammarAccess.ValidTriggerIdElements': ...
    def getValidTriggerIdRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidTriggerNumberAccess(self) -> 'RulesGrammarAccess.ValidTriggerNumberElements': ...
    def getValidTriggerNumberRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidTriggerRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getValidTriggerStringAccess(self) -> 'RulesGrammarAccess.ValidTriggerStringElements': ...
    def getValidTriggerStringRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getVariableDeclarationAccess(self) -> 'RulesGrammarAccess.VariableDeclarationElements': ...
    def getVariableDeclarationRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getWSRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getXAdditiveExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XAdditiveExpressionElements: ...
    def getXAdditiveExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXAndExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XAndExpressionElements: ...
    def getXAndExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXAssignmentAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XAssignmentElements: ...
    def getXAssignmentRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXBasicForLoopExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XBasicForLoopExpressionElements: ...
    def getXBasicForLoopExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXBlockExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XBlockExpressionElements: ...
    def getXBlockExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXBooleanLiteralAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XBooleanLiteralElements: ...
    def getXBooleanLiteralRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXCasePartAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XCasePartElements: ...
    def getXCasePartRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXCastedExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XCastedExpressionElements: ...
    def getXCastedExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXCatchClauseAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XCatchClauseElements: ...
    def getXCatchClauseRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXClosureAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XClosureElements: ...
    def getXClosureRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXCollectionLiteralAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XCollectionLiteralElements: ...
    def getXCollectionLiteralRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXConstructorCallAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XConstructorCallElements: ...
    def getXConstructorCallRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXDoWhileExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XDoWhileExpressionElements: ...
    def getXDoWhileExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXEqualityExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XEqualityExpressionElements: ...
    def getXEqualityExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XExpressionElements: ...
    def getXExpressionInClosureAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XExpressionInClosureElements: ...
    def getXExpressionInClosureRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXExpressionOrVarDeclarationAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XExpressionOrVarDeclarationElements: ...
    def getXExpressionOrVarDeclarationRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXFeatureCallAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XFeatureCallElements: ...
    def getXFeatureCallRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXForLoopExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XForLoopExpressionElements: ...
    def getXForLoopExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXFunctionTypeRefAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.XFunctionTypeRefElements: ...
    def getXFunctionTypeRefRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXIfExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XIfExpressionElements: ...
    def getXIfExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXImportDeclarationAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.XImportDeclarationElements: ...
    def getXImportDeclarationRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXImportSectionAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess.XImportSectionElements: ...
    def getXImportSectionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXListLiteralAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XListLiteralElements: ...
    def getXListLiteralRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXLiteralAccess(self) -> org.openhab.core.model.script.services.ScriptGrammarAccess.XLiteralElements: ...
    def getXLiteralRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXMemberFeatureCallAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XMemberFeatureCallElements: ...
    def getXMemberFeatureCallRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXMultiplicativeExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XMultiplicativeExpressionElements: ...
    def getXMultiplicativeExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXNullLiteralAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XNullLiteralElements: ...
    def getXNullLiteralRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXNumberLiteralAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XNumberLiteralElements: ...
    def getXNumberLiteralRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXOrExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XOrExpressionElements: ...
    def getXOrExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXOtherOperatorExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XOtherOperatorExpressionElements: ...
    def getXOtherOperatorExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXParenthesizedExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XParenthesizedExpressionElements: ...
    def getXParenthesizedExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXPostfixOperationAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XPostfixOperationElements: ...
    def getXPostfixOperationRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXPrimaryExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XPrimaryExpressionElements: ...
    def getXPrimaryExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXRelationalExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XRelationalExpressionElements: ...
    def getXRelationalExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXReturnExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XReturnExpressionElements: ...
    def getXReturnExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXSetLiteralAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XSetLiteralElements: ...
    def getXSetLiteralRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXShortClosureAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XShortClosureElements: ...
    def getXShortClosureRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXStringLiteralAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XStringLiteralElements: ...
    def getXStringLiteralRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXSwitchExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XSwitchExpressionElements: ...
    def getXSwitchExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXSynchronizedExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XSynchronizedExpressionElements: ...
    def getXSynchronizedExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXThrowExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XThrowExpressionElements: ...
    def getXThrowExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXTryCatchFinallyExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XTryCatchFinallyExpressionElements: ...
    def getXTryCatchFinallyExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXTypeLiteralAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XTypeLiteralElements: ...
    def getXTypeLiteralRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXUnaryOperationAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XUnaryOperationElements: ...
    def getXUnaryOperationRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXVariableDeclarationAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XVariableDeclarationElements: ...
    def getXVariableDeclarationRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXWhileExpressionAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess.XWhileExpressionElements: ...
    def getXWhileExpressionRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getXbaseGrammarAccess(self) -> org.eclipse.xtext.xbase.services.XbaseGrammarAccess: ...
    def getXtypeGrammarAccess(self) -> org.eclipse.xtext.xbase.services.XtypeGrammarAccess: ...
    class ChangedEventTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ChangedEventTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ChangedEventTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getChangedKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        def getFromKeyword_3_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_3(self) -> org.eclipse.xtext.Group: ...
        def getGroup_4(self) -> org.eclipse.xtext.Group: ...
        def getItemAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getItemItemNameParserRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getItemKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getNewStateAssignment_4_1(self) -> org.eclipse.xtext.Assignment: ...
        def getNewStateValidStateParserRuleCall_4_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getOldStateAssignment_3_1(self) -> org.eclipse.xtext.Assignment: ...
        def getOldStateValidStateParserRuleCall_3_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getToKeyword_4_0(self) -> org.eclipse.xtext.Keyword: ...
    class CommandEventTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$CommandEventTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * CommandEventTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getCommandAssignment_3(self) -> org.eclipse.xtext.Assignment: ...
        def getCommandValidCommandParserRuleCall_3_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getItemAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getItemItemNameParserRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getItemKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getReceivedCommandKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class EventEmittedTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$EventEmittedTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * EventEmittedTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getChannelAlternatives_1_0(self) -> org.eclipse.xtext.Alternatives: ...
        def getChannelAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getChannelIDTerminalRuleCall_1_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getChannelKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getChannelSTRINGTerminalRuleCall_1_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getTriggerAssignment_3(self) -> org.eclipse.xtext.Assignment: ...
        def getTriggerValidTriggerParserRuleCall_3_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getTriggeredKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
    class EventTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$EventTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * EventTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        def getChangedEventTriggerParserRuleCall_4(self) -> org.eclipse.xtext.RuleCall: ...
        def getCommandEventTriggerParserRuleCall_2(self) -> org.eclipse.xtext.RuleCall: ...
        def getEventEmittedTriggerParserRuleCall_6(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroupMemberChangedEventTriggerParserRuleCall_5(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroupMemberCommandEventTriggerParserRuleCall_3(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroupMemberUpdateEventTriggerParserRuleCall_1(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getSystemTriggerParserRuleCall_8(self) -> org.eclipse.xtext.RuleCall: ...
        def getThingStateChangedEventTriggerParserRuleCall_10(self) -> org.eclipse.xtext.RuleCall: ...
        def getThingStateUpdateEventTriggerParserRuleCall_9(self) -> org.eclipse.xtext.RuleCall: ...
        def getTimerTriggerParserRuleCall_7(self) -> org.eclipse.xtext.RuleCall: ...
        def getUpdateEventTriggerParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
    class GroupMemberChangedEventTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$GroupMemberChangedEventTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * GroupMemberChangedEventTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getChangedKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        def getFromKeyword_3_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroupAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getGroupItemNameParserRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroup_3(self) -> org.eclipse.xtext.Group: ...
        def getGroup_4(self) -> org.eclipse.xtext.Group: ...
        def getMemberOfKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getNewStateAssignment_4_1(self) -> org.eclipse.xtext.Assignment: ...
        def getNewStateValidStateParserRuleCall_4_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getOldStateAssignment_3_1(self) -> org.eclipse.xtext.Assignment: ...
        def getOldStateValidStateParserRuleCall_3_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getToKeyword_4_0(self) -> org.eclipse.xtext.Keyword: ...
    class GroupMemberCommandEventTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$GroupMemberCommandEventTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * GroupMemberCommandEventTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getCommandAssignment_3(self) -> org.eclipse.xtext.Assignment: ...
        def getCommandValidCommandParserRuleCall_3_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroupAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getGroupItemNameParserRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getMemberOfKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getReceivedCommandKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class GroupMemberUpdateEventTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$GroupMemberUpdateEventTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * GroupMemberUpdateEventTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroupAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getGroupItemNameParserRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getMemberOfKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getReceivedUpdateKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getStateAssignment_3(self) -> org.eclipse.xtext.Assignment: ...
        def getStateValidStateParserRuleCall_3_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ItemNameElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ItemNameElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ItemNameElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getIDTerminalRuleCall(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class RuleElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$RuleElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * RuleElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getEndKeyword_7(self) -> org.eclipse.xtext.Keyword: ...
        def getEventtriggerAssignment_3(self) -> org.eclipse.xtext.Assignment: ...
        def getEventtriggerAssignment_4_1(self) -> org.eclipse.xtext.Assignment: ...
        def getEventtriggerEventTriggerParserRuleCall_3_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getEventtriggerEventTriggerParserRuleCall_4_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_4(self) -> org.eclipse.xtext.Group: ...
        def getNameAlternatives_1_0(self) -> org.eclipse.xtext.Alternatives: ...
        def getNameAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getNameIDTerminalRuleCall_1_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getNameSTRINGTerminalRuleCall_1_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getOrKeyword_4_0(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getRuleKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getScriptAssignment_6(self) -> org.eclipse.xtext.Assignment: ...
        def getScriptScriptParserRuleCall_6_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getThenKeyword_5(self) -> org.eclipse.xtext.Keyword: ...
        def getWhenKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
    class RuleModelElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$RuleModelElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * RuleModelElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getImportSectionAssignment_0(self) -> org.eclipse.xtext.Assignment: ...
        def getImportSectionXImportSectionParserRuleCall_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getRulesAssignment_2(self) -> org.eclipse.xtext.Assignment: ...
        def getRulesRuleParserRuleCall_2_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getVariablesAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getVariablesVariableDeclarationParserRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
    class SystemOnShutdownTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$SystemOnShutdownTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * SystemOnShutdownTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getShutsDownKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        def getSystemKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        def getSystemOnShutdownTriggerAction_0(self) -> org.eclipse.xtext.Action: ...
    class SystemOnStartupTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$SystemOnStartupTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * SystemOnStartupTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getStartedKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        def getSystemKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        def getSystemOnStartupTriggerAction_0(self) -> org.eclipse.xtext.Action: ...
    class SystemTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$SystemTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * SystemTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getSystemOnShutdownTriggerParserRuleCall_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getSystemOnStartupTriggerParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ThingStateChangedEventTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ThingStateChangedEventTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ThingStateChangedEventTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getChangedKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        def getFromKeyword_3_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_3(self) -> org.eclipse.xtext.Group: ...
        def getGroup_4(self) -> org.eclipse.xtext.Group: ...
        def getNewStateAssignment_4_1(self) -> org.eclipse.xtext.Assignment: ...
        def getNewStateThingValidStateParserRuleCall_4_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getOldStateAssignment_3_1(self) -> org.eclipse.xtext.Assignment: ...
        def getOldStateThingValidStateParserRuleCall_3_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getThingAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getThingKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getThingSTRINGTerminalRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getToKeyword_4_0(self) -> org.eclipse.xtext.Keyword: ...
    class ThingStateUpdateEventTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ThingStateUpdateEventTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ThingStateUpdateEventTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getReceivedUpdateKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getStateAssignment_3(self) -> org.eclipse.xtext.Assignment: ...
        def getStateThingValidStateParserRuleCall_3_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getThingAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getThingKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getThingSTRINGTerminalRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ThingValidStateElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ThingValidStateElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ThingValidStateElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        def getINITIALIZINGKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        def getOFFLINEKeyword_4(self) -> org.eclipse.xtext.Keyword: ...
        def getONLINEKeyword_3(self) -> org.eclipse.xtext.Keyword: ...
        def getREMOVEDKeyword_6(self) -> org.eclipse.xtext.Keyword: ...
        def getREMOVINGKeyword_5(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getUNINITIALIZEDKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getUNKNOWNKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
    class TimerTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$TimerTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * TimerTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        def getCronAssignment_0_2(self) -> org.eclipse.xtext.Assignment: ...
        def getCronKeyword_0_1(self) -> org.eclipse.xtext.Keyword: ...
        def getCronSTRINGTerminalRuleCall_0_2_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroup_0(self) -> org.eclipse.xtext.Group: ...
        def getGroup_1(self) -> org.eclipse.xtext.Group: ...
        def getIsKeyword_1_1(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getTimeAlternatives_1_2_0(self) -> org.eclipse.xtext.Alternatives: ...
        def getTimeAssignment_1_2(self) -> org.eclipse.xtext.Assignment: ...
        def getTimeKeyword_0_0(self) -> org.eclipse.xtext.Keyword: ...
        def getTimeKeyword_1_0(self) -> org.eclipse.xtext.Keyword: ...
        def getTimeMidnightKeyword_1_2_0_0(self) -> org.eclipse.xtext.Keyword: ...
        def getTimeNoonKeyword_1_2_0_1(self) -> org.eclipse.xtext.Keyword: ...
    class UpdateEventTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$UpdateEventTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * UpdateEventTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getItemAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getItemItemNameParserRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getItemKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getReceivedUpdateKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getStateAssignment_3(self) -> org.eclipse.xtext.Assignment: ...
        def getStateValidStateParserRuleCall_3_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidCommandElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidCommandElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidCommandElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValidCommandIdParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getValidCommandNumberParserRuleCall_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getValidCommandStringParserRuleCall_2(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidCommandIdElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidCommandIdElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidCommandIdElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValueAssignment(self) -> org.eclipse.xtext.Assignment: ...
        def getValueIDTerminalRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidCommandNumberElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidCommandNumberElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidCommandNumberElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValueAssignment(self) -> org.eclipse.xtext.Assignment: ...
        def getValueNumberParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidCommandStringElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidCommandStringElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidCommandStringElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValueAssignment(self) -> org.eclipse.xtext.Assignment: ...
        def getValueSTRINGTerminalRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidStateElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidStateElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidStateElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValidStateIdParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getValidStateNumberParserRuleCall_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getValidStateStringParserRuleCall_2(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidStateIdElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidStateIdElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidStateIdElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValueAssignment(self) -> org.eclipse.xtext.Assignment: ...
        def getValueIDTerminalRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidStateNumberElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidStateNumberElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidStateNumberElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValueAssignment(self) -> org.eclipse.xtext.Assignment: ...
        def getValueNumberParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidStateStringElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidStateStringElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidStateStringElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValueAssignment(self) -> org.eclipse.xtext.Assignment: ...
        def getValueSTRINGTerminalRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidTriggerElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidTriggerElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidTriggerElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValidTriggerIdParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getValidTriggerNumberParserRuleCall_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getValidTriggerStringParserRuleCall_2(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidTriggerIdElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidTriggerIdElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidTriggerIdElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValueAssignment(self) -> org.eclipse.xtext.Assignment: ...
        def getValueIDTerminalRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidTriggerNumberElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidTriggerNumberElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidTriggerNumberElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValueAssignment(self) -> org.eclipse.xtext.Assignment: ...
        def getValueNumberParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
    class ValidTriggerStringElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$ValidTriggerStringElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ValidTriggerStringElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValueAssignment(self) -> org.eclipse.xtext.Assignment: ...
        def getValueSTRINGTerminalRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
    class VariableDeclarationElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.rule.services.RulesGrammarAccess$VariableDeclarationElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * VariableDeclarationElements(org.openhab.core.model.rule.services.RulesGrammarAccess)
        
        """
        def __init__(self): ...
        def getAlternatives_0(self) -> org.eclipse.xtext.Alternatives: ...
        def getAlternatives_1(self) -> org.eclipse.xtext.Alternatives: ...
        def getEqualsSignKeyword_2_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_1_0(self) -> org.eclipse.xtext.Group: ...
        def getGroup_1_0_0(self) -> org.eclipse.xtext.Group: ...
        def getGroup_2(self) -> org.eclipse.xtext.Group: ...
        def getNameAssignment_1_0_0_1(self) -> org.eclipse.xtext.Assignment: ...
        def getNameAssignment_1_1(self) -> org.eclipse.xtext.Assignment: ...
        def getNameValidIDParserRuleCall_1_0_0_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getNameValidIDParserRuleCall_1_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getRightAssignment_2_1(self) -> org.eclipse.xtext.Assignment: ...
        def getRightXExpressionParserRuleCall_2_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getTypeAssignment_1_0_0_0(self) -> org.eclipse.xtext.Assignment: ...
        def getTypeJvmTypeReferenceParserRuleCall_1_0_0_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getValKeyword_0_1(self) -> org.eclipse.xtext.Keyword: ...
        def getWriteableAssignment_0_0(self) -> org.eclipse.xtext.Assignment: ...
        def getWriteableVarKeyword_0_0_0(self) -> org.eclipse.xtext.Keyword: ...
