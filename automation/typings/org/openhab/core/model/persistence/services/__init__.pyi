import org.eclipse.xtext
import org.eclipse.xtext.common.services
import org.eclipse.xtext.service
import typing


class PersistenceGrammarAccess(org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder):
    """
    Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess'
    
        Extends:
            org.eclipse.xtext.service.AbstractElementFinder$AbstractGrammarElementFinder
    
      Constructors:
        * PersistenceGrammarAccess(org.eclipse.xtext.service.GrammarProvider, org.eclipse.xtext.common.services.TerminalsGrammarAccess)
    
    """
    def __init__(self, grammarProvider: org.eclipse.xtext.service.GrammarProvider, gaTerminals: org.eclipse.xtext.common.services.TerminalsGrammarAccess): ...
    def getANY_OTHERRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getAllConfigAccess(self) -> 'PersistenceGrammarAccess.AllConfigElements': ...
    def getAllConfigRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getCronStrategyAccess(self) -> 'PersistenceGrammarAccess.CronStrategyElements': ...
    def getCronStrategyRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getDECIMALAccess(self) -> 'PersistenceGrammarAccess.DECIMALElements': ...
    def getDECIMALRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getFilterAccess(self) -> 'PersistenceGrammarAccess.FilterElements': ...
    def getFilterDetailsAccess(self) -> 'PersistenceGrammarAccess.FilterDetailsElements': ...
    def getFilterDetailsRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getFilterRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getGrammar(self) -> org.eclipse.xtext.Grammar: ...
    def getGroupConfigAccess(self) -> 'PersistenceGrammarAccess.GroupConfigElements': ...
    def getGroupConfigRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getIDRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getINTRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getItemConfigAccess(self) -> 'PersistenceGrammarAccess.ItemConfigElements': ...
    def getItemConfigRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getML_COMMENTRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getPersistenceConfigurationAccess(self) -> 'PersistenceGrammarAccess.PersistenceConfigurationElements': ...
    def getPersistenceConfigurationRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getPersistenceModelAccess(self) -> 'PersistenceGrammarAccess.PersistenceModelElements': ...
    def getPersistenceModelRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getSL_COMMENTRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getSTRINGRule(self) -> org.eclipse.xtext.TerminalRule: ...
    def getStrategyAccess(self) -> 'PersistenceGrammarAccess.StrategyElements': ...
    def getStrategyRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getTerminalsGrammarAccess(self) -> org.eclipse.xtext.common.services.TerminalsGrammarAccess: ...
    def getThresholdFilterAccess(self) -> 'PersistenceGrammarAccess.ThresholdFilterElements': ...
    def getThresholdFilterRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getTimeFilterAccess(self) -> 'PersistenceGrammarAccess.TimeFilterElements': ...
    def getTimeFilterRule(self) -> org.eclipse.xtext.ParserRule: ...
    def getWSRule(self) -> org.eclipse.xtext.TerminalRule: ...
    class AllConfigElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$AllConfigElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * AllConfigElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getAllConfigAction_0(self) -> org.eclipse.xtext.Action: ...
        def getAsteriskKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class CronStrategyElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$CronStrategyElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * CronStrategyElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getColonKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        def getCronExpressionAssignment_3(self) -> org.eclipse.xtext.Assignment: ...
        def getCronExpressionSTRINGTerminalRuleCall_3_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getCronStrategyAction_0(self) -> org.eclipse.xtext.Action: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getNameAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getNameIDTerminalRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class DECIMALElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$DECIMALElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * DECIMALElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getFullStopKeyword_1_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_1(self) -> org.eclipse.xtext.Group: ...
        def getINTTerminalRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getINTTerminalRuleCall_1_1(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class FilterDetailsElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$FilterDetailsElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * FilterDetailsElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getThresholdFilterParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getTimeFilterParserRuleCall_1(self) -> org.eclipse.xtext.RuleCall: ...
    class FilterElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$FilterElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * FilterElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getColonKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        def getDefinitionAssignment_2(self) -> org.eclipse.xtext.Assignment: ...
        def getDefinitionFilterDetailsParserRuleCall_2_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getNameAssignment_0(self) -> org.eclipse.xtext.Assignment: ...
        def getNameIDTerminalRuleCall_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class GroupConfigElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$GroupConfigElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * GroupConfigElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getAsteriskKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroupAssignment_0(self) -> org.eclipse.xtext.Assignment: ...
        def getGroupIDTerminalRuleCall_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class ItemConfigElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$ItemConfigElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ItemConfigElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getItemAssignment(self) -> org.eclipse.xtext.Assignment: ...
        def getItemIDTerminalRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class PersistenceConfigurationElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$PersistenceConfigurationElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * PersistenceConfigurationElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getAliasAssignment_2_1(self) -> org.eclipse.xtext.Assignment: ...
        def getAliasSTRINGTerminalRuleCall_2_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getAlternatives_3(self) -> org.eclipse.xtext.Alternatives: ...
        def getColonKeyword_3_0_0(self) -> org.eclipse.xtext.Keyword: ...
        def getCommaKeyword_1_0(self) -> org.eclipse.xtext.Keyword: ...
        def getCommaKeyword_3_0_1_3_0(self) -> org.eclipse.xtext.Keyword: ...
        def getCommaKeyword_3_0_2_3_0(self) -> org.eclipse.xtext.Keyword: ...
        def getEqualsSignKeyword_3_0_1_1(self) -> org.eclipse.xtext.Keyword: ...
        def getEqualsSignKeyword_3_0_2_1(self) -> org.eclipse.xtext.Keyword: ...
        def getFilterKeyword_3_0_2_0(self) -> org.eclipse.xtext.Keyword: ...
        def getFiltersAssignment_3_0_2_2(self) -> org.eclipse.xtext.Assignment: ...
        def getFiltersAssignment_3_0_2_3_1(self) -> org.eclipse.xtext.Assignment: ...
        def getFiltersFilterCrossReference_3_0_2_2_0(self) -> org.eclipse.xtext.CrossReference: ...
        def getFiltersFilterCrossReference_3_0_2_3_1_0(self) -> org.eclipse.xtext.CrossReference: ...
        def getFiltersFilterIDTerminalRuleCall_3_0_2_2_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getFiltersFilterIDTerminalRuleCall_3_0_2_3_1_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_1(self) -> org.eclipse.xtext.Group: ...
        def getGroup_2(self) -> org.eclipse.xtext.Group: ...
        def getGroup_3_0(self) -> org.eclipse.xtext.Group: ...
        def getGroup_3_0_1(self) -> org.eclipse.xtext.Group: ...
        def getGroup_3_0_1_3(self) -> org.eclipse.xtext.Group: ...
        def getGroup_3_0_2(self) -> org.eclipse.xtext.Group: ...
        def getGroup_3_0_2_3(self) -> org.eclipse.xtext.Group: ...
        def getHyphenMinusGreaterThanSignKeyword_2_0(self) -> org.eclipse.xtext.Keyword: ...
        def getItemsAllConfigParserRuleCall_0_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getItemsAllConfigParserRuleCall_1_1_0_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getItemsAlternatives_0_0(self) -> org.eclipse.xtext.Alternatives: ...
        def getItemsAlternatives_1_1_0(self) -> org.eclipse.xtext.Alternatives: ...
        def getItemsAssignment_0(self) -> org.eclipse.xtext.Assignment: ...
        def getItemsAssignment_1_1(self) -> org.eclipse.xtext.Assignment: ...
        def getItemsGroupConfigParserRuleCall_0_0_2(self) -> org.eclipse.xtext.RuleCall: ...
        def getItemsGroupConfigParserRuleCall_1_1_0_2(self) -> org.eclipse.xtext.RuleCall: ...
        def getItemsItemConfigParserRuleCall_0_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getItemsItemConfigParserRuleCall_1_1_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getSemicolonKeyword_3_1(self) -> org.eclipse.xtext.Keyword: ...
        def getStrategiesAssignment_3_0_1_2(self) -> org.eclipse.xtext.Assignment: ...
        def getStrategiesAssignment_3_0_1_3_1(self) -> org.eclipse.xtext.Assignment: ...
        def getStrategiesStrategyCrossReference_3_0_1_2_0(self) -> org.eclipse.xtext.CrossReference: ...
        def getStrategiesStrategyCrossReference_3_0_1_3_1_0(self) -> org.eclipse.xtext.CrossReference: ...
        def getStrategiesStrategyIDTerminalRuleCall_3_0_1_2_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getStrategiesStrategyIDTerminalRuleCall_3_0_1_3_1_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getStrategyKeyword_3_0_1_0(self) -> org.eclipse.xtext.Keyword: ...
    class PersistenceModelElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$PersistenceModelElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * PersistenceModelElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getCommaKeyword_4_3_0(self) -> org.eclipse.xtext.Keyword: ...
        def getConfigsAssignment_7_2(self) -> org.eclipse.xtext.Assignment: ...
        def getConfigsPersistenceConfigurationParserRuleCall_7_2_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getDefaultKeyword_4_0(self) -> org.eclipse.xtext.Keyword: ...
        def getDefaultsAssignment_4_2(self) -> org.eclipse.xtext.Assignment: ...
        def getDefaultsAssignment_4_3_1(self) -> org.eclipse.xtext.Assignment: ...
        def getDefaultsStrategyCrossReference_4_2_0(self) -> org.eclipse.xtext.CrossReference: ...
        def getDefaultsStrategyCrossReference_4_3_1_0(self) -> org.eclipse.xtext.CrossReference: ...
        def getDefaultsStrategyIDTerminalRuleCall_4_2_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getDefaultsStrategyIDTerminalRuleCall_4_3_1_0_1(self) -> org.eclipse.xtext.RuleCall: ...
        def getEqualsSignKeyword_4_1(self) -> org.eclipse.xtext.Keyword: ...
        def getFiltersAssignment_6_2(self) -> org.eclipse.xtext.Assignment: ...
        def getFiltersFilterParserRuleCall_6_2_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getFiltersKeyword_6_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getGroup_4(self) -> org.eclipse.xtext.Group: ...
        def getGroup_4_3(self) -> org.eclipse.xtext.Group: ...
        def getGroup_6(self) -> org.eclipse.xtext.Group: ...
        def getGroup_7(self) -> org.eclipse.xtext.Group: ...
        def getItemsKeyword_7_0(self) -> org.eclipse.xtext.Keyword: ...
        def getLeftCurlyBracketKeyword_2(self) -> org.eclipse.xtext.Keyword: ...
        def getLeftCurlyBracketKeyword_6_1(self) -> org.eclipse.xtext.Keyword: ...
        def getLeftCurlyBracketKeyword_7_1(self) -> org.eclipse.xtext.Keyword: ...
        def getPersistenceModelAction_0(self) -> org.eclipse.xtext.Action: ...
        def getRightCurlyBracketKeyword_5(self) -> org.eclipse.xtext.Keyword: ...
        def getRightCurlyBracketKeyword_6_3(self) -> org.eclipse.xtext.Keyword: ...
        def getRightCurlyBracketKeyword_7_3(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getStrategiesAssignment_3(self) -> org.eclipse.xtext.Assignment: ...
        def getStrategiesKeyword_1(self) -> org.eclipse.xtext.Keyword: ...
        def getStrategiesStrategyParserRuleCall_3_0(self) -> org.eclipse.xtext.RuleCall: ...
    class StrategyElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$StrategyElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * StrategyElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getAlternatives(self) -> org.eclipse.xtext.Alternatives: ...
        def getCronStrategyParserRuleCall_0(self) -> org.eclipse.xtext.RuleCall: ...
        def getNameAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getNameIDTerminalRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
    class ThresholdFilterElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$ThresholdFilterElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * ThresholdFilterElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getGreaterThanSignKeyword_0(self) -> org.eclipse.xtext.Keyword: ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        def getPercentAssignment_2(self) -> org.eclipse.xtext.Assignment: ...
        def getPercentPercentSignKeyword_2_0(self) -> org.eclipse.xtext.Keyword: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getValueAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getValueDECIMALParserRuleCall_1_0(self) -> org.eclipse.xtext.RuleCall: ...
    class TimeFilterElements(org.eclipse.xtext.service.AbstractElementFinder.AbstractParserRuleElementFinder):
        """
        Java class 'org.openhab.core.model.persistence.services.PersistenceGrammarAccess$TimeFilterElements'
        
            Extends:
                org.eclipse.xtext.service.AbstractElementFinder$AbstractParserRuleElementFinder
        
          Constructors:
            * TimeFilterElements(org.openhab.core.model.persistence.services.PersistenceGrammarAccess)
        
        """
        def __init__(self): ...
        def getGroup(self) -> org.eclipse.xtext.Group: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.AbstractRule: ...
        @typing.overload
        def getRule(self) -> org.eclipse.xtext.ParserRule: ...
        def getUnitAlternatives_1_0(self) -> org.eclipse.xtext.Alternatives: ...
        def getUnitAssignment_1(self) -> org.eclipse.xtext.Assignment: ...
        def getUnitDKeyword_1_0_3(self) -> org.eclipse.xtext.Keyword: ...
        def getUnitHKeyword_1_0_2(self) -> org.eclipse.xtext.Keyword: ...
        def getUnitMKeyword_1_0_1(self) -> org.eclipse.xtext.Keyword: ...
        def getUnitSKeyword_1_0_0(self) -> org.eclipse.xtext.Keyword: ...
        def getValueAssignment_0(self) -> org.eclipse.xtext.Assignment: ...
        def getValueINTTerminalRuleCall_0_0(self) -> org.eclipse.xtext.RuleCall: ...
