import java.lang
import java.net
import java.util
import typing


class UpnpIOParticipant(java.lang.Object):
    """
    public interface UpnpIOParticipant
    
        The :class:`~org.openhab.core.io.transport.upnp.UpnpIOParticipant` is an interface that needs to be implemented by
        classes that wants to participate in UPNP communication
    
    
    """
    def getUDN(self) -> java.lang.String: ...
    def onServiceSubscribed(self, service: java.lang.String, succeeded: bool) -> None: ...
    def onStatusChanged(self, status: bool) -> None: ...
    def onValueReceived(self, variable: java.lang.String, value: java.lang.String, service: java.lang.String) -> None: ...

class UpnpIOService(java.lang.Object):
    """
    public interface UpnpIOService
    
        The :class:`~org.openhab.core.io.transport.upnp.UpnpIOService` is an interface that described the UPNP IO Service.
    
    
    """
    def addStatusListener(self, participant: UpnpIOParticipant, serviceID: java.lang.String, actionID: java.lang.String, interval: int) -> None: ...
    def addSubscription(self, participant: UpnpIOParticipant, serviceID: java.lang.String, duration: int) -> None: ...
    def getDescriptorURL(self, participant: UpnpIOParticipant) -> java.net.URL: ...
    def invokeAction(self, participant: UpnpIOParticipant, serviceID: java.lang.String, actionID: java.lang.String, inputs: typing.Union[java.util.Map[java.lang.String, java.lang.String], typing.Mapping[java.lang.String, java.lang.String]]) -> java.util.Map[java.lang.String, java.lang.String]: ...
    def isRegistered(self, participant: UpnpIOParticipant) -> bool: ...
    def registerParticipant(self, participant: UpnpIOParticipant) -> None: ...
    def removeStatusListener(self, participant: UpnpIOParticipant) -> None: ...
    def removeSubscription(self, participant: UpnpIOParticipant, serviceID: java.lang.String) -> None: ...
    def unregisterParticipant(self, participant: UpnpIOParticipant) -> None: ...
