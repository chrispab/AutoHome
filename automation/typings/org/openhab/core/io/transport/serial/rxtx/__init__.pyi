import gnu.io
import java.io
import java.lang
import org.openhab.core.io.transport.serial


class RxTxSerialPort(org.openhab.core.io.transport.serial.SerialPort):
    """
    Java class 'org.openhab.core.io.transport.serial.rxtx.RxTxSerialPort'
    
        Extends:
            java.lang.Object
    
        Interfaces:
            org.openhab.core.io.transport.serial.SerialPort
    
      Constructors:
        * RxTxSerialPort(gnu.io.SerialPort)
    
    """
    def __init__(self, sp: gnu.io.SerialPort): ...
    def addEventListener(self, listener: org.openhab.core.io.transport.serial.SerialPortEventListener) -> None: ...
    def close(self) -> None: ...
    def disableReceiveTimeout(self) -> None: ...
    def enableReceiveThreshold(self, i: int) -> None: ...
    def enableReceiveTimeout(self, timeout: int) -> None: ...
    def getInputStream(self) -> java.io.InputStream: ...
    def getName(self) -> java.lang.String: ...
    def getOutputStream(self) -> java.io.OutputStream: ...
    def notifyOnBreakInterrupt(self, enable: bool) -> None: ...
    def notifyOnDataAvailable(self, enable: bool) -> None: ...
    def notifyOnFramingError(self, enable: bool) -> None: ...
    def notifyOnOverrunError(self, enable: bool) -> None: ...
    def notifyOnParityError(self, enable: bool) -> None: ...
    def removeEventListener(self) -> None: ...
    def setFlowControlMode(self, flowcontrolRtsctsOut: int) -> None: ...
    def setRTS(self, enable: bool) -> None: ...
    def setSerialPortParams(self, baudrate: int, dataBits: int, stopBits: int, parity: int) -> None: ...
