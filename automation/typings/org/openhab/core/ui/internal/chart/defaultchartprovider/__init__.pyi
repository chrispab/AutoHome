import java.awt
import java.awt.image
import java.lang
import java.util
import org.openhab.core.i18n
import org.openhab.core.persistence
import org.openhab.core.ui.chart
import org.openhab.core.ui.items
import typing


class ChartTheme(java.lang.Object):
    """
    Java class 'org.openhab.core.ui.internal.chart.defaultchartprovider.ChartTheme'
    
    """
    def getAxisTickLabelsColor(self) -> java.awt.Color: ...
    def getAxisTickLabelsFont(self, dpi: int) -> java.awt.Font: ...
    def getChartBackgroundColor(self) -> java.awt.Color: ...
    def getChartFontColor(self) -> java.awt.Color: ...
    def getChartPadding(self, dpi: int) -> int: ...
    def getLegendBackgroundColor(self) -> java.awt.Color: ...
    def getLegendFont(self, dpi: int) -> java.awt.Font: ...
    def getLegendSeriesLineLength(self, dpi: int) -> int: ...
    def getLineColor(self, series: int) -> java.awt.Color: ...
    def getLineWidth(self, dpi: int) -> float: ...
    def getPlotBackgroundColor(self) -> java.awt.Color: ...
    def getPlotGridLinesColor(self) -> java.awt.Color: ...
    def getPlotGridLinesDash(self, dpi: int) -> float: ...
    def getPlotGridLinesWidth(self, dpi: int) -> float: ...
    def getThemeName(self) -> java.lang.String: ...

class DefaultChartProvider(org.openhab.core.ui.chart.ChartProvider):
    """
    Java class 'org.openhab.core.ui.internal.chart.defaultchartprovider.DefaultChartProvider'
    
        Extends:
            java.lang.Object
    
        Interfaces:
            org.openhab.core.ui.chart.ChartProvider
    
      Constructors:
        * DefaultChartProvider(org.openhab.core.i18n.TimeZoneProvider, org.openhab.core.ui.items.ItemUIRegistry, org.openhab.core.persistence.PersistenceServiceRegistry)
    
      Attributes:
        CHART_THEME_DEFAULT_NAME (java.lang.String): final static field
        DPI_DEFAULT (int): final static field
    
    """
    CHART_THEME_DEFAULT_NAME: typing.ClassVar[java.lang.String] = ...
    DPI_DEFAULT: typing.ClassVar[int] = ...
    def __init__(self, timeZoneProvider: org.openhab.core.i18n.TimeZoneProvider, itemUIRegistry: org.openhab.core.ui.items.ItemUIRegistry, persistenceServiceRegistry: org.openhab.core.persistence.PersistenceServiceRegistry): ...
    def createChart(self, serviceId: java.lang.String, theme: java.lang.String, startTime: java.util.Date, endTime: java.util.Date, height: int, width: int, items: java.lang.String, groups: java.lang.String, dpiValue: int, legend: bool) -> java.awt.image.BufferedImage: ...
    def getChartType(self) -> org.openhab.core.ui.chart.ChartProvider.ImageType: ...
    def getName(self) -> java.lang.String: ...

class ChartThemeBlack(ChartTheme):
    """
    Java class 'org.openhab.core.ui.internal.chart.defaultchartprovider.ChartThemeBlack'
    
        Extends:
            java.lang.Object
    
        Interfaces:
            org.openhab.core.ui.internal.chart.defaultchartprovider.ChartT
            heme
    
      Constructors:
        * ChartThemeBlack()
    
    """
    def __init__(self): ...
    def getAxisTickLabelsColor(self) -> java.awt.Color: ...
    def getAxisTickLabelsFont(self, dpi: int) -> java.awt.Font: ...
    def getChartBackgroundColor(self) -> java.awt.Color: ...
    def getChartFontColor(self) -> java.awt.Color: ...
    def getChartPadding(self, dpi: int) -> int: ...
    def getLegendBackgroundColor(self) -> java.awt.Color: ...
    def getLegendFont(self, dpi: int) -> java.awt.Font: ...
    def getLegendSeriesLineLength(self, dpi: int) -> int: ...
    def getLineColor(self, series: int) -> java.awt.Color: ...
    def getLineWidth(self, dpi: int) -> float: ...
    def getPlotBackgroundColor(self) -> java.awt.Color: ...
    def getPlotGridLinesColor(self) -> java.awt.Color: ...
    def getPlotGridLinesDash(self, dpi: int) -> float: ...
    def getPlotGridLinesWidth(self, dpi: int) -> float: ...
    def getThemeName(self) -> java.lang.String: ...

class ChartThemeBright(ChartTheme):
    """
    Java class 'org.openhab.core.ui.internal.chart.defaultchartprovider.ChartThemeBright'
    
        Extends:
            java.lang.Object
    
        Interfaces:
            org.openhab.core.ui.internal.chart.defaultchartprovider.ChartT
            heme
    
      Constructors:
        * ChartThemeBright()
    
    """
    def __init__(self): ...
    def getAxisTickLabelsColor(self) -> java.awt.Color: ...
    def getAxisTickLabelsFont(self, dpi: int) -> java.awt.Font: ...
    def getChartBackgroundColor(self) -> java.awt.Color: ...
    def getChartFontColor(self) -> java.awt.Color: ...
    def getChartPadding(self, dpi: int) -> int: ...
    def getLegendBackgroundColor(self) -> java.awt.Color: ...
    def getLegendFont(self, dpi: int) -> java.awt.Font: ...
    def getLegendSeriesLineLength(self, dpi: int) -> int: ...
    def getLineColor(self, series: int) -> java.awt.Color: ...
    def getLineWidth(self, dpi: int) -> float: ...
    def getPlotBackgroundColor(self) -> java.awt.Color: ...
    def getPlotGridLinesColor(self) -> java.awt.Color: ...
    def getPlotGridLinesDash(self, dpi: int) -> float: ...
    def getPlotGridLinesWidth(self, dpi: int) -> float: ...
    def getThemeName(self) -> java.lang.String: ...

class ChartThemeDark(ChartTheme):
    """
    Java class 'org.openhab.core.ui.internal.chart.defaultchartprovider.ChartThemeDark'
    
        Extends:
            java.lang.Object
    
        Interfaces:
            org.openhab.core.ui.internal.chart.defaultchartprovider.ChartT
            heme
    
      Constructors:
        * ChartThemeDark()
    
    """
    def __init__(self): ...
    def getAxisTickLabelsColor(self) -> java.awt.Color: ...
    def getAxisTickLabelsFont(self, dpi: int) -> java.awt.Font: ...
    def getChartBackgroundColor(self) -> java.awt.Color: ...
    def getChartFontColor(self) -> java.awt.Color: ...
    def getChartPadding(self, dpi: int) -> int: ...
    def getLegendBackgroundColor(self) -> java.awt.Color: ...
    def getLegendFont(self, dpi: int) -> java.awt.Font: ...
    def getLegendSeriesLineLength(self, dpi: int) -> int: ...
    def getLineColor(self, series: int) -> java.awt.Color: ...
    def getLineWidth(self, dpi: int) -> float: ...
    def getPlotBackgroundColor(self) -> java.awt.Color: ...
    def getPlotGridLinesColor(self) -> java.awt.Color: ...
    def getPlotGridLinesDash(self, dpi: int) -> float: ...
    def getPlotGridLinesWidth(self, dpi: int) -> float: ...
    def getThemeName(self) -> java.lang.String: ...

class ChartThemeWhite(ChartTheme):
    """
    Java class 'org.openhab.core.ui.internal.chart.defaultchartprovider.ChartThemeWhite'
    
        Extends:
            java.lang.Object
    
        Interfaces:
            org.openhab.core.ui.internal.chart.defaultchartprovider.ChartT
            heme
    
      Constructors:
        * ChartThemeWhite()
    
    """
    def __init__(self): ...
    def getAxisTickLabelsColor(self) -> java.awt.Color: ...
    def getAxisTickLabelsFont(self, dpi: int) -> java.awt.Font: ...
    def getChartBackgroundColor(self) -> java.awt.Color: ...
    def getChartFontColor(self) -> java.awt.Color: ...
    def getChartPadding(self, dpi: int) -> int: ...
    def getLegendBackgroundColor(self) -> java.awt.Color: ...
    def getLegendFont(self, dpi: int) -> java.awt.Font: ...
    def getLegendSeriesLineLength(self, dpi: int) -> int: ...
    def getLineColor(self, series: int) -> java.awt.Color: ...
    def getLineWidth(self, dpi: int) -> float: ...
    def getPlotBackgroundColor(self) -> java.awt.Color: ...
    def getPlotGridLinesColor(self) -> java.awt.Color: ...
    def getPlotGridLinesDash(self, dpi: int) -> float: ...
    def getPlotGridLinesWidth(self, dpi: int) -> float: ...
    def getThemeName(self) -> java.lang.String: ...
