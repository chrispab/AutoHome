import java.lang
import org.osgi.framework
import typing


class ExportedPackage(java.lang.Object):
    """
    Java class 'org.osgi.service.packageadmin.ExportedPackage'
    
    """
    def getExportingBundle(self) -> org.osgi.framework.Bundle: ...
    def getImportingBundles(self) -> typing.List[org.osgi.framework.Bundle]: ...
    def getName(self) -> java.lang.String: ...
    def getSpecificationVersion(self) -> java.lang.String: ...
    def getVersion(self) -> org.osgi.framework.Version: ...
    def isRemovalPending(self) -> bool: ...

class PackageAdmin(java.lang.Object):
    """
    Java class 'org.osgi.service.packageadmin.PackageAdmin'
    
      Attributes:
        BUNDLE_TYPE_FRAGMENT (int): final static field
    
    """
    BUNDLE_TYPE_FRAGMENT: typing.ClassVar[int] = ...
    def getBundle(self, class_: typing.Type) -> org.osgi.framework.Bundle: ...
    def getBundleType(self, bundle: org.osgi.framework.Bundle) -> int: ...
    def getBundles(self, string: java.lang.String, string2: java.lang.String) -> typing.List[org.osgi.framework.Bundle]: ...
    def getExportedPackage(self, string: java.lang.String) -> ExportedPackage: ...
    @typing.overload
    def getExportedPackages(self, string: java.lang.String) -> typing.List[ExportedPackage]: ...
    @typing.overload
    def getExportedPackages(self, bundle: org.osgi.framework.Bundle) -> typing.List[ExportedPackage]: ...
    def getFragments(self, bundle: org.osgi.framework.Bundle) -> typing.List[org.osgi.framework.Bundle]: ...
    def getHosts(self, bundle: org.osgi.framework.Bundle) -> typing.List[org.osgi.framework.Bundle]: ...
    def getRequiredBundles(self, string: java.lang.String) -> typing.List['RequiredBundle']: ...
    def refreshPackages(self, bundleArray: typing.List[org.osgi.framework.Bundle]) -> None: ...
    def resolveBundles(self, bundleArray: typing.List[org.osgi.framework.Bundle]) -> bool: ...

class RequiredBundle(java.lang.Object):
    """
    Java class 'org.osgi.service.packageadmin.RequiredBundle'
    
    """
    def getBundle(self) -> org.osgi.framework.Bundle: ...
    def getRequiringBundles(self) -> typing.List[org.osgi.framework.Bundle]: ...
    def getSymbolicName(self) -> java.lang.String: ...
    def getVersion(self) -> org.osgi.framework.Version: ...
    def isRemovalPending(self) -> bool: ...
