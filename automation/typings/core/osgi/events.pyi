__all__ = ["hashtable", "OsgiEventAdmin", "OsgiEventTrigger", "log_event", "event_dict"]

import typing as t
from java.lang import String

from java.util import Hashtable

from org.osgi.service.event import Event, EventHandler

try:
    from org.openhab.core.automation import Trigger
except:
    from org.eclipse.smarthome.core.automation import Trigger

_K = t.TypeVar("_K")
_V = t.TypeVar("_V")

def hashtable(*key_values: t.Tuple[_K, _V]) -> Hashtable[_K, _V]: ...

class OsgiEventAdmin(object):
    class OsgiEventHandler(EventHandler):
        def __init__(self) -> None: ...
        def handleEvent(self, event: Event) -> None: ...
        def dispose(self) -> None: ...
    @classmethod
    def add_listener(class_, listener: t.Callable[[Event], t.Any]) -> None: ...
    @classmethod
    def remove_listener(class_, listener: t.Callable[[Event], t.Any]) -> None: ...

class OsgiEventTrigger(Trigger):
    def __init__(
        self, filter_predicate: t.Optional[t.Callable[[Event], bool]] = ...
    ) -> None: ...
    def event_filter(self, event: Event) -> bool: ...
    def event_transformer(self, event: Event) -> Event: ...

def log_event(event: Event) -> None: ...
def event_dict(event: Event) -> t.Dict[String, t.Any]: ...
