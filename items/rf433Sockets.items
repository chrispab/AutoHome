
// Switch socketG2_1 "socketG2_1"  <switch> {http=">[ON:GET:http://192.168.0.230/switch?4=ON:on] >[OFF:GET:http://192.168.0.230/switch?4=OFF:off]" }


Group gFairyLights
Group gXmasLights
Group gConservatory
Group gConservatoryFairyLights

Group gRadiators
Group gZoneControllerSockets


//Dining room switched socket - upper fairy lights
Switch diningRoomFairyLights433Socket "Dining Room Fairy Lights"  <poweroutlet_uk>  (gFairyLights, gDiningRoom, gConservatoryFairyLights) { channel="mqtt:topic:diningRoomFairyLights433Socket:powerSwitch" }

//conservatory fairy lights
Switch conservatoryFairyLights433Socket "Conservatory Fairy Lights"  <poweroutlet_uk>  (gFairyLights, gConservatory, gConservatoryFairyLights) { channel="mqtt:topic:conservatoryFairyLights433Socket:powerSwitch" }

//conservatory/Dining Room Rads sockets (3 off, kitchen, cons, dining room)
//! Note - this item is not direcly used. Implemeted in the Conservatory Radthermovalve.thing
Switch conservatoryRadiators "Conservatory Radiators"  <poweroutlet_uk> { channel="mqtt:topic:conservatoryRadiators:powerSwitch" }

//DAB Radio
Switch radio "DAB Radio"  <poweroutlet_uk> { ga="Switch" [ roomHint="Conservatory" ], channel="mqtt:topic:radio:powerSwitch" }

//conservatory Fan
Switch CT_Fan433PowerSocket "fan"  <poweroutlet_uk> { ga="Switch" [ roomHint="Conservatory" ], channel="mqtt:topic:fan:powerSwitch" }


//Amplifier
Switch CT_Soundbar433PowerSocket "Amplifier"  <poweroutlet_uk>  (gConservatory) { channel="mqtt:topic:CT_Soundbar433PowerSocket:powerSwitch" }

//Conservatory TV
Switch CT_TV433PowerSocket "conservatory TV Power socket"  <poweroutlet_uk>  (gConservatory) { channel="mqtt:topic:CT_TV433PowerSocket:powerSwitch" }


//zone1 power socket
Switch zone1ControllerPower "Zone one power"  <poweroutlet_uk> (gZoneControllerSockets) { channel="mqtt:topic:zone1ControllerPower:powerSwitch" }

//zone3 power socket
Switch zone3ControllerPower "Zone three power"  <poweroutlet_uk> (gZoneControllerSockets) { channel="mqtt:topic:zone3ControllerPower:powerSwitch" }


//outside temp sensor
// Switch socketG4_4 "socketG4_4_16"  <poweroutlet_uk> {mqtt=">[mosquitto:433Bridge/cmnd/Power16:command:*:MAP(onoffcases.map)]"}
Switch outsideSensorPower "socketG4_4_16"  <poweroutlet_uk> { channel="mqtt:topic:outsideSensorPower:powerSwitch" }


// ! to be converted to mqtt 2 binding format
// front room Tree and Fireplace Lights
Switch socketG1_1 "socketG1_1_1"  <poweroutlet_uk> (gXmasLights, gFrontRoom) {mqtt=">[mosquitto:433Bridge/cmnd/Power1:command:*:MAP(onoffcases.map)]"}

//dining room Tree, Piano, shevles and staircase Lights
Switch socketG1_2 "socketG1_2_2"  <poweroutlet_uk>  (gXmasLights, gDiningRoom) {mqtt=">[mosquitto:433Bridge/cmnd/Power2:command:*:MAP(onoffcases.map)]"}

//landing switched socket - fairy lights
Switch socketG1_3 "socketG1_3_3"  <poweroutlet_uk>  (gFairyLights) {mqtt=">[mosquitto:433Bridge/cmnd/Power3:command:*:MAP(onoffcases.map)]"}

Switch socketG3_3 "not in use"  <poweroutlet_uk> {mqtt=">[mosquitto:433Bridge/cmnd/Power11:command:*:MAP(onoffcases.map)]"}

Switch socketG3_4 "socketG3_4_12"  <poweroutlet_uk> {mqtt=">[mosquitto:433Bridge/cmnd/Power12:command:*:MAP(onoffcases.map)]"}

Switch socketG4_1 "not in use"  <poweroutlet_uk>  {mqtt=">[mosquitto:433Bridge/cmnd/Power13:command:*:MAP(onoffcases.map)]"}


