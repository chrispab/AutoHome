Group gTVPower 
Group gTVApplication
// Group gTVPower2
Group  tvGroup "TV" { ga="TV" [ volumeDefaultPercentage="20", levelStepSize="10", volumeMaxLevel="100", transportControlSupportedCommands="NEXT,PREVIOUS,PAUSE,RESUME", 
                            availableChannels="1=Channel1=NBC,2=Channel2=CBS", availableInputs="hdmi1=xbox:gaming,hdmi2=settopbox", 
                            availableApplications="emby=emby,netflix=Netflix:Chill,spotify=Spotify:Music" ] }

Group gCT_TV ["Television"]

//autoupdate="false"  waits for confirmation from TV that it is ON
// Switch CT_TV_Power  "Conservatory LG TV Power" (gTVPower,gCT_TV) ["Control", "Power"] { channel="lgwebos:WebOSTV:tv_conservatory:power", autoupdate="false" }
Switch CT_TV_Power  "Conservatory TV Power" (tvGroup, gTVPower,gCT_TV) ["Control", "Power"] {ga="tvPower", channel="lgwebos:WebOSTV:tv_conservatory:power", autoupdate="true"}
Switch CT_TV_Mute  "TV mute"                (tvGroup) {  ga="tvMute", channel="lgwebos:WebOSTV:tv_conservatory:mute"}
Dimmer CT_TV_Volume "Volume [%d]"           (tvGroup) { ga="tvVolume", channel="lgwebos:WebOSTV:tv_conservatory:volume" }
Number CT_TV_VolDummy "VolumeUpDown"
String CT_TV_Channel "Channel [%s]"         (tvGroup) {  ga="tvChannel" ,channel="lgwebos:WebOSTV:tv_conservatory:channel" }
Number CT_TV_ChannelDummy "ChannelUpDown"
String CT_TV_Toast                                      { channel="lgwebos:WebOSTV:tv_conservatory:toast"}
Switch CT_TV_Stop "Stop"                                { autoupdate="false", channel="lgwebos:WebOSTV:tv_conservatory:mediaStop" }
String CT_TV_Application "Application [%s]" (tvGroup, gCT_TV, gTVApplication) ["Status"] { ga="tvApplication", channel="lgwebos:WebOSTV:tv_conservatory:appLauncher"}
Player CT_TV_Player                         (tvGroup) { ga="tvTransport",  channel="lgwebos:WebOSTV:tv_conservatory:mediaPlayer"}
String CT_TV_RcButton                                   { channel="lgwebos:WebOSTV:tv_conservatory:rcButton"}

String CT_TV_LastApp "last Application [%s]" // (CT_TV, gTVApplication)


// Switch powerItem       (tvGroup) { ga="tvPower" }
// Switch muteItem        (tvGroup) { ga="tvMute" }
// Dimmer volumeItem      (tvGroup) { ga="tvVolume" }
// String channelItem     (tvGroup) { ga="tvChannel" }
String inputItem       (tvGroup) { ga="tvInput" }
// String applicationItem (tvGroup) { ga="tvApplication" }
// Player transportItem   (tvGroup) { ga="tvTransport" }



// The binding provides a few commands you can use in the console. Enter the command openhab:lgwebos to get the usage.

// Usage: openhab:lgwebos <thingUID> applications - list applications
// Usage: openhab:lgwebos <thingUID> channels - list channels
// Usage: openhab:lgwebos lgwebos:WebOSTV:tv_conservatory accesskey - show the access key

//  openhab:lgwebos lgwebos:WebOSTV:tv_conservatory accesskey


// The command applications reports in the console the list of all applications with their id and name. The command channels reports in the console the list of all channels with their id, number and name. The command accesskey reports in the console the access key used to connect to your TV.
// In case of issues you may find it helpful to enable debug level logging and check you log file. Log into openHAB console and enable debug logging for this binding:

// log:set debug org.openhab.binding.lgwebos

// http://openhabian2.local:8080/addons/binding-lgwebos
