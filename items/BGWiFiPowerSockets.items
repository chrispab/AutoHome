// Group gMQTT
Group gBGWiFiPowerSockets
// Group gWiFiPowerSocketsReachable
// Group gChristmasWifiPowerSockets


//currently used for RPi mythtv_backend server
// Switch CT_rf433_skt_pi_kodi_power "CT_rf433_skt_pi_kodi_power RF433 power socket 1"  <poweroutlet_uk>  (gConservatory) { channel="mqtt:topic:rf433_skt_1:powerSwitch" }
Group gBG_socket_maxworktime_updates
Group gBG_sockets_reachable

//!double socket 1
Switch bg_wifisocket_1_1_power "BG Socket one-one" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifisocket_1:powerSwitch_1" }
Switch CT_pi_kodi_bg_wifisocket_1_power "BG Socket one-one" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifisocket_1:powerSwitch_1" }

Switch bg_wifisocket_1_2_power "BG Socket one-two" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifisocket_1:powerSwitch_2" }
Number bg_wifisocket_1_maxworktime "BG Socket 1-maxworktime" (gMQTT, gBGWiFiPowerSockets, gBG_socket_maxworktime_updates)  { channel = "mqtt:topic:bg_wifisocket_1:maxworktime" }
String bg_wifisocket_1_reachable "BG Socket 1-reachable" (gMQTT, gBGWiFiPowerSockets, gBG_sockets_reachable)  { channel = "mqtt:topic:bg_wifisocket_1:reachable" }


//double socket 2
Switch bg_wifisocket_2_1_power "BG Socket 2-one" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifisocket_2:powerSwitch_1" }
Switch bg_wifisocket_2_2_power "BG Socket 2-two" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifisocket_2:powerSwitch_2" }
Number bg_wifisocket_2_maxworktime "BG Socket 2-maxworktime" (gMQTT, gBGWiFiPowerSockets, gBG_socket_maxworktime_updates)  { channel = "mqtt:topic:bg_wifisocket_2:maxworktime" }
String bg_wifisocket_2_reachable "BG Socket 2-reachable" (gMQTT, gBGWiFiPowerSockets, gBG_sockets_reachable)  { channel = "mqtt:topic:bg_wifisocket_2:reachable" }


//double socket 3
Switch bg_wifisocket_3_1_power "BG Socket three-one" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifisocket_3:powerSwitch_1" }
Switch amplifier_power "BG Socket three-one" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifisocket_3:powerSwitch_1" }

Switch bg_wifisocket_3_2_power "BG Socket three-two" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifisocket_3:powerSwitch_2" }
Number bg_wifisocket_3_maxworktime "BG Socket 3-maxworktime" (gMQTT, gBGWiFiPowerSockets, gBG_socket_maxworktime_updates)  { channel = "mqtt:topic:bg_wifisocket_3:maxworktime" }
String bg_wifisocket_3_reachable "BG Socket 3-reachable" (gMQTT, gBGWiFiPowerSockets, gBG_sockets_reachable)  { channel = "mqtt:topic:bg_wifisocket_3:reachable" }


//double socket 4
Switch bg_wifisocket_4_1_power "BG Socket 4-one" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifisocket_4:powerSwitch_1" }
Switch bg_wifisocket_4_2_power "BG Socket 4-two" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifisocket_4:powerSwitch_2" }
Number bg_wifisocket_4_maxworktime "BG Socket 4-maxworktime" (gMQTT, gBGWiFiPowerSockets, gBG_socket_maxworktime_updates)  { channel = "mqtt:topic:bg_wifisocket_4:maxworktime" }
String bg_wifisocket_4_reachable "BG Socket 4-reachable" (gMQTT, gBGWiFiPowerSockets, gBG_sockets_reachable)  { channel = "mqtt:topic:bg_wifisocket_4:reachable" }


// mqtt:topic:bg_wifiadapter_1
Switch bg_wifiadaptor_1_power "BG adapter 1" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifiadapter_1:powerSwitch" }
Number bg_wifiadaptor_1_maxworktime "BG adapter 1-maxworktime" (gMQTT, gBGWiFiPowerSockets, gBG_socket_maxworktime_updates)  { channel = "mqtt:topic:bg_wifiadapter_1:maxworktime" }
String bg_wifiadaptor_1_reachable "BG adapter 1-reachable" (gMQTT, gBGWiFiPowerSockets, gBG_sockets_reachable)  { channel = "mqtt:topic:bg_wifiadapter_1:reachable" }

Switch bg_wifiadaptor_2_power "BG adapter 2" (gMQTT, gBGWiFiPowerSockets)  { channel = "mqtt:topic:bg_wifiadapter_2:powerSwitch" }
Number bg_wifiadaptor_2_maxworktime "BG adapter 2-maxworktime" (gMQTT, gBGWiFiPowerSockets, gBG_socket_maxworktime_updates)  { channel = "mqtt:topic:bg_wifiadapter_2:maxworktime" }
String bg_wifiadaptor_2_reachable "BG adapter 2-reachable" (gMQTT, gBGWiFiPowerSockets, gBG_sockets_reachable)  { channel = "mqtt:topic:bg_wifiadapter_2:reachable" }
