Switch fan_heater "fan_heater pwr" (gMQTT, gWiFiPowerSockets )  { channel = "mqtt:topic:bg_wifisocket_9:powerSwitch_2" }
Number fan_heater_temperature_sensor	"fan_heater_temperature_sensor"		(gMQTT, gWiFiPowerSockets)		{ channel = "mqtt:topic:wifi_socket_8:temperature" }
Number fan_heater_ON_Setpoint "fan_heater on setponit [%.1f 째C]"    <degreesc>
Switch FH_enable "FH_enable"



// https://github.com/openhab/openhab-google-assistant/blob/master/docs/USAGE.md
// thermostat definition formatted for Google home, assistant use
Group gFH_Thermostat "Fan Heater Thermostat" (gThermostats) { ga="Thermostat" [ roomHint="Conservatory" ] }

String FH_ThermostatMode "Fan Heater Thermostat Mode" <settings> (gFH_Thermostat, gThermostatModes) { ga="thermostatMode" }
Number:Temperature FH_ThermostatTemperatureSetpoint "Fan Heater Setpoint [%.1f 째C]" <heating> (gChart_Minute, gFH_Thermostat) { ga="thermostatTemperatureSetpoint" }
Number:Temperature FH_ThermostatTemperatureAmbient "Fan Heater Temperature [%.1f 째C]" <temperature> (gChart_Minute, gFH_Thermostat) // { ga="thermostatTemperatureAmbient", channel="mqtt:topic:conservatoryRadThermoValve:temperature" }
Number:Dimensionless FH_ThermostatHumidityAmbient "Fan Heater Humidity [%.1f 째C]" <humidity> (gChart_Minute, gFH_Thermostat, gThermostatHumidityAmbients)
        {unit="%", ga="thermostatHumidityAmbient", channel="mqtt:topic:conservatoryRadThermoValve:humidity" }

//additional params for use in openhab functions etc 
// Switch FH_Heater_Control "Fan Heater Heater"  <my_radiator>   (gHeaterControls, gAnyRoomHeaterOn) { channel = "mqtt:topic:wifi_socket_8:powerSwitch"}
//! gAnyRoomHeaterOn has been removed so never triggers gas boiler - cos its a fan heater
// Switch FH_Heater_Control "Fan Heater Heater"  <my_radiator>   (gChart_Minute, gHeaterControls) { channel = "mqtt:topic:wifi_socket_8:powerSwitch"}
Switch FH_Heater_Control "Fan Heater Heater"  <my_radiator>   (gChart_Minute, gHeaterControls) { channel = "mqtt:topic:bg_wifisocket_9:powerSwitch_2" }
String FH_Heater_Mode "Fan Heater Heating Mode" <settings>  //(gTimepicker)
// String FH_Heater_Reachable "Fan Heater Reachable" <qualityofservice> (gFH_Thermostat,gHeaterReachables)  { channel = "mqtt:topic:bg_wifisocket_9:reachable", expire="10s,state=Offline"  }
String FH_Heater_Reachable "Fan Heater Reachable" <qualityofservice> (gFH_Thermostat,gHeaterReachables)  { channel = "mqtt:topic:bg_wifisocket_9:reachable" , expire="30s,state=OFF"   }

Number FH_Heater_Rssi "FH RTV RSSI [%.1f]" <qualityofservice> (gFH_Thermostat) { channel="mqtt:topic:bg_wifisocket_9:rssi" }

//boost
Switch      FH_Heater_Boost "FanHeater Heater boost" <my_radiator> (gHeaterBoosters,gAnyRoomHeaterOn,gHeaterControls)
Switch      v_FH_Boost  "FanHeater virtual Heater boost"
Switch      v_FH_Heater_Boost  "FanHeater virtual Heater boost" (gvHeaterBoosters)
Number:Time FH_Boost_Countdown "FanHeater_Boost_Countdown"
Number FH_Boost_Time "FH_Boost_Time"  (gBoost_Time)


Switch FH_LinkSetpointToCTSetpoint "Link Fan Heater setpoint to CT Setpoint"
Number FH_Link_TrackingOffset "FH_Link_TrackingOffset"
Number FH_outside_temperature_enable "FH_outside_temperature_enable"
