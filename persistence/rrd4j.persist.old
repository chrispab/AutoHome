Strategies {
    // for rrd charts, we need a cron strategy, every Minute is a must have.
    everyMinute : "0 * * * * ?"
    // get the data reduced for older values to keep database small
    everyHour : "0 0 * * * ?"
    everyDay : "0 0 0 * * ?"
    
    default = everyChange
}

Items {
    // additionally persist Items
    // Kitchen_Temperature_Chart* : strategy = everyUpdate, everyMinute
    // ESP01_Relay : strategy = everyUpdate,everyMinute
    // ESP01_BoilerRelay : strategy = everyUpdate, everyMinute, restoreOnStartup
    // //ESP01_Temperature
    // ESP01_Temperature : strategy = everyMinute, restoreOnStartup
    
    
    Zone1Temperature : strategy = everyUpdate,everyMinute, restoreOnStartup
    Zone1Humidity : strategy = everyUpdate,everyMinute, restoreOnStartup
    Zone1VentStatus : strategy = everyUpdate,everyMinute, restoreOnStartup
    Zone1FanStatus : strategy = everyUpdate,everyMinute, restoreOnStartup
    Zone1LightStatus : strategy = everyUpdate,everyMinute, restoreOnStartup
    Zone1HeaterStatus : strategy = everyUpdate,everyMinute, restoreOnStartup
    
    Zone3Temperature : strategy = everyUpdate,everyMinute, restoreOnStartup
    Zone3Humidity : strategy = everyUpdate,everyMinute, restoreOnStartup
    Zone3VentStatus : strategy = everyUpdate,everyMinute, restoreOnStartup
    Zone3FanStatus : strategy = everyUpdate,everyMinute, restoreOnStartup
    Zone3LightStatus : strategy = everyUpdate,everyMinute, restoreOnStartup
    Zone3HeaterStatus : strategy = everyUpdate,everyMinute, restoreOnStartup


    Boiler_Control :  strategy = everyUpdate,everyMinute, restoreOnStartup
//Switch FR_BoilerDemand "Front Room Boiler Demand"

    //Heating_Mode* : strategy = everyUpdate,everyMinute
    //Heating_Setpoint* : strategy = everyUpdate,everyMinute
    conservatory_Heat_Mode                : strategy = everyUpdate, restoreOnStartup
    //CT_Heating_PresetNormal_Group* : strategy = everyUpdate, restoreOnStartup
    CT_TemperatureSetpoint                : strategy = everyUpdate, restoreOnStartup
    CT_Temperature : strategy = everyMinute, restoreOnStartup
    CT_Humidity : strategy = everyMinute, restoreOnStartup
    CT_Heater : strategy = everyMinute, restoreOnStartup
    
    FR_HeatingMode                : strategy = everyUpdate, restoreOnStartup
    //FR_Heating_PresetNormal_Group* : strategy = everyUpdate, restoreOnStartup
    FR_TemperatureSetpoint                : strategy = everyUpdate, restoreOnStartup
    FR_Temperature : strategy = everyUpdate,everyMinute, restoreOnStartup
    FR_Humidity : strategy = everyUpdate,everyMinute, restoreOnStartup
    FR_Heater : strategy = everyUpdate,everyMinute, restoreOnStartup

    E_BR_Heating_Mode                : strategy = everyUpdate, restoreOnStartup
    //FR_Heating_PresetNormal_Group* : strategy = everyUpdate, restoreOnStartup
    E_BR_Heating_Setpoint                : strategy = everyUpdate, restoreOnStartup
    E_BR_Temperature : strategy = everyUpdate,everyMinute, restoreOnStartup
    E_BR_Humidity : strategy = everyUpdate,everyMinute, restoreOnStartup
    E_BR_Heating : strategy = everyUpdate,everyMinute, restoreOnStartup


    AT_HeatingMode : strategy = everyUpdate, restoreOnStartup
    //FR_Heating_PresetNormal_Group* : strategy = everyUpdate, restoreOnStartup
    AT_Heater_Setpoint : strategy = everyUpdate, restoreOnStartup
    Attic_Temperature : strategy = everyMinute, restoreOnStartup
    Attic_Humidity : strategy = everyMinute, restoreOnStartup
    AT_Heater : strategy = everyMinute, restoreOnStartup


    J_BR_Heating_Mode                : strategy = everyUpdate, restoreOnStartup
    //FR_Heating_PresetNormal_Group* : strategy = everyUpdate, restoreOnStartup
    J_BR_Heating_Setpoint                : strategy = everyUpdate, restoreOnStartup
    J_BR_Temperature : strategy = everyUpdate,everyMinute, restoreOnStartup
    J_BR_Humidity : strategy = everyUpdate,everyMinute, restoreOnStartup
    J_BR_Heating : strategy = everyUpdate,everyMinute, restoreOnStartup
}
